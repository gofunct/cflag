// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/cloud/location/locations.proto

package google_cloud_location

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/gogo/google/api"
import google_protobuf1 "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// The request message for [Locations.ListLocations][google.cloud.location.Locations.ListLocations].
type ListLocationsRequest struct {
	// The resource that owns the locations collection, if applicable.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The standard list filter.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// The standard list page size.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The standard list page token.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListLocationsRequest) Reset()                    { *m = ListLocationsRequest{} }
func (m *ListLocationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListLocationsRequest) ProtoMessage()               {}
func (*ListLocationsRequest) Descriptor() ([]byte, []int) { return fileDescriptorLocations, []int{0} }

func (m *ListLocationsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListLocationsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListLocationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLocationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response message for [Locations.ListLocations][google.cloud.location.Locations.ListLocations].
type ListLocationsResponse struct {
	// A list of locations that matches the specified filter in the request.
	Locations []*Location `protobuf:"bytes,1,rep,name=locations" json:"locations,omitempty"`
	// The standard List next-page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListLocationsResponse) Reset()                    { *m = ListLocationsResponse{} }
func (m *ListLocationsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListLocationsResponse) ProtoMessage()               {}
func (*ListLocationsResponse) Descriptor() ([]byte, []int) { return fileDescriptorLocations, []int{1} }

func (m *ListLocationsResponse) GetLocations() []*Location {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *ListLocationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The request message for [Locations.GetLocation][google.cloud.location.Locations.GetLocation].
type GetLocationRequest struct {
	// Resource name for the location.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetLocationRequest) Reset()                    { *m = GetLocationRequest{} }
func (m *GetLocationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLocationRequest) ProtoMessage()               {}
func (*GetLocationRequest) Descriptor() ([]byte, []int) { return fileDescriptorLocations, []int{2} }

func (m *GetLocationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A resource that represents Google Cloud Platform location.
type Location struct {
	// Resource name for the location, which may vary between implementations.
	// For example: `"projects/example-project/locations/us-east1"`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The canonical id for this location. For example: `"us-east1"`.
	LocationId string `protobuf:"bytes,4,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Cross-service attributes for the location. For example
	//
	//     {"cloud.googleapis.com/region": "us-east1"}
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Service-specific metadata. For example the available capacity at the given
	// location.
	Metadata *google_protobuf1.Any `protobuf:"bytes,3,opt,name=metadata" json:"metadata,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptorLocations, []int{3} }

func (m *Location) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Location) GetLocationId() string {
	if m != nil {
		return m.LocationId
	}
	return ""
}

func (m *Location) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Location) GetMetadata() *google_protobuf1.Any {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*ListLocationsRequest)(nil), "google.cloud.location.ListLocationsRequest")
	proto.RegisterType((*ListLocationsResponse)(nil), "google.cloud.location.ListLocationsResponse")
	proto.RegisterType((*GetLocationRequest)(nil), "google.cloud.location.GetLocationRequest")
	proto.RegisterType((*Location)(nil), "google.cloud.location.Location")
}

func init() { proto.RegisterFile("google/cloud/location/locations.proto", fileDescriptorLocations) }

var fileDescriptorLocations = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xd6, 0x3a, 0x6d, 0x94, 0x8c, 0x55, 0x40, 0xa3, 0x14, 0xb9, 0x06, 0x94, 0xd4, 0x08, 0x48,
	0x0b, 0xb2, 0x4b, 0xb8, 0x00, 0x52, 0x0f, 0x14, 0x21, 0x84, 0x94, 0x43, 0x64, 0xb8, 0x47, 0x9b,
	0x64, 0x1a, 0x99, 0x3a, 0xbb, 0x26, 0xde, 0x54, 0xa4, 0xa8, 0x3d, 0x20, 0xde, 0xa0, 0x2f, 0xc1,
	0xfb, 0xf0, 0x0a, 0xbc, 0x00, 0x37, 0x8e, 0xc8, 0xeb, 0x9f, 0x18, 0x70, 0x09, 0xb7, 0xdd, 0x99,
	0xef, 0xdb, 0x6f, 0xbe, 0xf9, 0x6c, 0xb8, 0x37, 0x95, 0x72, 0x1a, 0x92, 0x37, 0x0e, 0xe5, 0x62,
	0xe2, 0x85, 0x72, 0xcc, 0x55, 0x20, 0x45, 0x71, 0x88, 0xdd, 0x68, 0x2e, 0x95, 0xc4, 0xed, 0x14,
	0xe6, 0x6a, 0x98, 0x9b, 0x77, 0xed, 0xdb, 0x19, 0x9b, 0x47, 0x81, 0xc7, 0x85, 0x90, 0xaa, 0x4c,
	0xb2, 0x77, 0xb2, 0xae, 0xbe, 0x8d, 0x16, 0xc7, 0x1e, 0x17, 0xcb, 0xb4, 0xe5, 0x5c, 0x40, 0xab,
	0x1f, 0xc4, 0xaa, 0x9f, 0xcb, 0xf8, 0xf4, 0x61, 0x41, 0xb1, 0x42, 0x84, 0x0d, 0xc1, 0x67, 0x64,
	0xb1, 0x0e, 0xeb, 0x36, 0x7d, 0x7d, 0xc6, 0x9b, 0x50, 0x3f, 0x0e, 0x42, 0x45, 0x73, 0xcb, 0xd0,
	0xd5, 0xec, 0x86, 0xb7, 0xa0, 0x19, 0xf1, 0x29, 0x0d, 0xe3, 0xe0, 0x8c, 0xac, 0x5a, 0x87, 0x75,
	0x37, 0xfd, 0x46, 0x52, 0x78, 0x1b, 0x9c, 0x11, 0xde, 0x01, 0xd0, 0x4d, 0x25, 0x4f, 0x48, 0x58,
	0x1b, 0x9a, 0xa8, 0xe1, 0xef, 0x92, 0x82, 0x73, 0x01, 0xdb, 0x7f, 0xe8, 0xc7, 0x91, 0x14, 0x31,
	0xe1, 0x21, 0x34, 0x0b, 0xef, 0x16, 0xeb, 0xd4, 0xba, 0x66, 0xaf, 0xed, 0x56, 0x9a, 0x77, 0x73,
	0xb2, 0xbf, 0x62, 0xe0, 0x7d, 0xb8, 0x2e, 0xe8, 0xa3, 0x1a, 0x96, 0xb4, 0xd3, 0xa1, 0xb7, 0x92,
	0xf2, 0xa0, 0xd0, 0xef, 0x02, 0xbe, 0xa6, 0x42, 0xfe, 0x1f, 0xee, 0x9d, 0x1f, 0x0c, 0x1a, 0x39,
	0xae, 0x72, 0x3d, 0x6d, 0x30, 0x73, 0xfd, 0x61, 0x30, 0xc9, 0xac, 0x42, 0x5e, 0x7a, 0x33, 0xc1,
	0x97, 0x50, 0x0f, 0xf9, 0x88, 0xc2, 0xd8, 0x32, 0xb4, 0x9f, 0x87, 0x6b, 0xfc, 0xb8, 0x7d, 0x8d,
	0x7e, 0x25, 0xd4, 0x7c, 0xe9, 0x67, 0x54, 0x3c, 0x80, 0xc6, 0x8c, 0x14, 0x9f, 0x70, 0xc5, 0xf5,
	0xae, 0xcd, 0x5e, 0x2b, 0x7f, 0x26, 0x8f, 0xd7, 0x7d, 0x21, 0x96, 0x7e, 0x81, 0xb2, 0x9f, 0x81,
	0x59, 0x7a, 0x08, 0x6f, 0x40, 0xed, 0x84, 0x96, 0xd9, 0xe4, 0xc9, 0x11, 0x5b, 0xb0, 0x79, 0xca,
	0xc3, 0x05, 0x65, 0x1b, 0x4a, 0x2f, 0xcf, 0x8d, 0xa7, 0xac, 0xf7, 0xd5, 0x80, 0x66, 0x11, 0x0d,
	0x5e, 0x32, 0xd8, 0xfa, 0x2d, 0x2c, 0xbc, 0xd2, 0x41, 0xc5, 0x27, 0x65, 0x3f, 0xfa, 0x3f, 0x70,
	0x9a, 0xbf, 0xf3, 0xe0, 0xf3, 0xb7, 0xef, 0x97, 0xc6, 0x2e, 0xb6, 0xbd, 0xd3, 0xc7, 0xde, 0xa7,
	0x64, 0xc1, 0x87, 0xd1, 0x5c, 0xbe, 0xa7, 0xb1, 0x8a, 0xbd, 0xfd, 0xf3, 0xd5, 0x7f, 0x81, 0x5f,
	0x18, 0x98, 0xa5, 0x08, 0x71, 0xef, 0x0a, 0x99, 0xbf, 0x63, 0xb6, 0xd7, 0x7d, 0x50, 0xce, 0x9e,
	0x1e, 0xe2, 0x2e, 0xee, 0x56, 0x0d, 0xb1, 0x9a, 0xc1, 0xdb, 0x3f, 0x3f, 0x3a, 0x80, 0x9d, 0xb1,
	0x9c, 0x55, 0x3f, 0x78, 0x74, 0xad, 0xf0, 0x37, 0x48, 0x32, 0x1a, 0xb0, 0x9f, 0x8c, 0x8d, 0xea,
	0x3a, 0xaf, 0x27, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x18, 0x3c, 0x95, 0xfa, 0x03, 0x00,
	0x00,
}
