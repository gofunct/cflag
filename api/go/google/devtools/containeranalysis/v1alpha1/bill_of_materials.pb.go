// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/devtools/containeranalysis/v1alpha1/bill_of_materials.proto

package google_devtools_containeranalysis_v1alpha1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/go/google/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Instruction set architectures supported by various package managers.
type PackageManager_Architecture int32

const (
	// Unknown architecture
	PackageManager_ARCHITECTURE_UNSPECIFIED PackageManager_Architecture = 0
	// X86 architecture
	PackageManager_X86 PackageManager_Architecture = 1
	// X64 architecture
	PackageManager_X64 PackageManager_Architecture = 2
)

var PackageManager_Architecture_name = map[int32]string{
	0: "ARCHITECTURE_UNSPECIFIED",
	1: "X86",
	2: "X64",
}
var PackageManager_Architecture_value = map[string]int32{
	"ARCHITECTURE_UNSPECIFIED": 0,
	"X86": 1,
	"X64": 2,
}

func (x PackageManager_Architecture) String() string {
	return proto.EnumName(PackageManager_Architecture_name, int32(x))
}
func (PackageManager_Architecture) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

// PackageManager provides metadata about available / installed packages.
type PackageManager struct {
}

func (m *PackageManager) Reset()                    { *m = PackageManager{} }
func (m *PackageManager) String() string            { return proto.CompactTextString(m) }
func (*PackageManager) ProtoMessage()               {}
func (*PackageManager) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// This represents a particular channel of distribution for a given package.
// e.g. Debian's jessie-backports dpkg mirror
type PackageManager_Distribution struct {
	// The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)
	// denoting the package manager version distributing a package.
	CpeUri string `protobuf:"bytes,1,opt,name=cpe_uri,json=cpeUri" json:"cpe_uri,omitempty"`
	// The CPU architecture for which packages in this distribution
	// channel were built
	Architecture PackageManager_Architecture `protobuf:"varint,2,opt,name=architecture,enum=google.devtools.containeranalysis.v1alpha1.PackageManager_Architecture" json:"architecture,omitempty"`
	// The latest available version of this package in
	// this distribution channel.
	LatestVersion *VulnerabilityType_Version `protobuf:"bytes,3,opt,name=latest_version,json=latestVersion" json:"latest_version,omitempty"`
	// A freeform string denoting the maintainer of this package.
	Maintainer string `protobuf:"bytes,4,opt,name=maintainer" json:"maintainer,omitempty"`
	// The distribution channel-specific homepage for this package.
	Url string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	// The distribution channel-specific description of this package.
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *PackageManager_Distribution) Reset()                    { *m = PackageManager_Distribution{} }
func (m *PackageManager_Distribution) String() string            { return proto.CompactTextString(m) }
func (*PackageManager_Distribution) ProtoMessage()               {}
func (*PackageManager_Distribution) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *PackageManager_Distribution) GetCpeUri() string {
	if m != nil {
		return m.CpeUri
	}
	return ""
}

func (m *PackageManager_Distribution) GetArchitecture() PackageManager_Architecture {
	if m != nil {
		return m.Architecture
	}
	return PackageManager_ARCHITECTURE_UNSPECIFIED
}

func (m *PackageManager_Distribution) GetLatestVersion() *VulnerabilityType_Version {
	if m != nil {
		return m.LatestVersion
	}
	return nil
}

func (m *PackageManager_Distribution) GetMaintainer() string {
	if m != nil {
		return m.Maintainer
	}
	return ""
}

func (m *PackageManager_Distribution) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PackageManager_Distribution) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// An occurrence of a particular package installation found within a
// system's filesystem.
// e.g. glibc was found in /var/lib/dpkg/status
type PackageManager_Location struct {
	// The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)
	// denoting the package manager version distributing a package.
	CpeUri string `protobuf:"bytes,1,opt,name=cpe_uri,json=cpeUri" json:"cpe_uri,omitempty"`
	// The version installed at this location.
	Version *VulnerabilityType_Version `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// The path from which we gathered that this package/version is installed.
	Path string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
}

func (m *PackageManager_Location) Reset()                    { *m = PackageManager_Location{} }
func (m *PackageManager_Location) String() string            { return proto.CompactTextString(m) }
func (*PackageManager_Location) ProtoMessage()               {}
func (*PackageManager_Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *PackageManager_Location) GetCpeUri() string {
	if m != nil {
		return m.CpeUri
	}
	return ""
}

func (m *PackageManager_Location) GetVersion() *VulnerabilityType_Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *PackageManager_Location) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// This represents a particular package that is distributed over
// various channels.
// e.g. glibc (aka libc6) is distributed by many, at various versions.
type PackageManager_Package struct {
	// The name of the package.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The various channels by which a package is distributed.
	Distribution []*PackageManager_Distribution `protobuf:"bytes,10,rep,name=distribution" json:"distribution,omitempty"`
}

func (m *PackageManager_Package) Reset()                    { *m = PackageManager_Package{} }
func (m *PackageManager_Package) String() string            { return proto.CompactTextString(m) }
func (*PackageManager_Package) ProtoMessage()               {}
func (*PackageManager_Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *PackageManager_Package) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageManager_Package) GetDistribution() []*PackageManager_Distribution {
	if m != nil {
		return m.Distribution
	}
	return nil
}

// This represents how a particular software package may be installed on
// a system.
type PackageManager_Installation struct {
	// Output only. The name of the installed package.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// All of the places within the filesystem versions of this package
	// have been found.
	Location []*PackageManager_Location `protobuf:"bytes,2,rep,name=location" json:"location,omitempty"`
}

func (m *PackageManager_Installation) Reset()                    { *m = PackageManager_Installation{} }
func (m *PackageManager_Installation) String() string            { return proto.CompactTextString(m) }
func (*PackageManager_Installation) ProtoMessage()               {}
func (*PackageManager_Installation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *PackageManager_Installation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PackageManager_Installation) GetLocation() []*PackageManager_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func init() {
	proto.RegisterType((*PackageManager)(nil), "google.devtools.containeranalysis.v1alpha1.PackageManager")
	proto.RegisterType((*PackageManager_Distribution)(nil), "google.devtools.containeranalysis.v1alpha1.PackageManager.Distribution")
	proto.RegisterType((*PackageManager_Location)(nil), "google.devtools.containeranalysis.v1alpha1.PackageManager.Location")
	proto.RegisterType((*PackageManager_Package)(nil), "google.devtools.containeranalysis.v1alpha1.PackageManager.Package")
	proto.RegisterType((*PackageManager_Installation)(nil), "google.devtools.containeranalysis.v1alpha1.PackageManager.Installation")
	proto.RegisterEnum("google.devtools.containeranalysis.v1alpha1.PackageManager_Architecture", PackageManager_Architecture_name, PackageManager_Architecture_value)
}

func init() {
	proto.RegisterFile("google/devtools/containeranalysis/v1alpha1/bill_of_materials.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x6a, 0xdb, 0x40,
	0x10, 0xc6, 0x2b, 0x39, 0x58, 0xc9, 0xd8, 0x35, 0x66, 0x2f, 0x15, 0x22, 0x14, 0x11, 0x28, 0x98,
	0x1e, 0x24, 0x92, 0x96, 0xd0, 0x53, 0xc1, 0x51, 0x94, 0xd4, 0xd0, 0x16, 0xa3, 0xda, 0xa1, 0x37,
	0x31, 0x96, 0xb7, 0xf6, 0x92, 0xf5, 0xae, 0x58, 0xad, 0x0c, 0x3e, 0xf7, 0xd6, 0x27, 0xe8, 0xb9,
	0x0f, 0xd5, 0xbe, 0x4e, 0xd1, 0xbf, 0x22, 0xd3, 0x3f, 0x34, 0x24, 0xb7, 0xd1, 0x7e, 0xf0, 0x9b,
	0x6f, 0xbe, 0x19, 0xc1, 0xc5, 0x4a, 0xca, 0x15, 0xa7, 0xfe, 0x92, 0x6e, 0xb5, 0x94, 0x3c, 0xf3,
	0x13, 0x29, 0x34, 0x32, 0x41, 0x15, 0x0a, 0xe4, 0xbb, 0x8c, 0x65, 0xfe, 0xf6, 0x14, 0x79, 0xba,
	0xc6, 0x53, 0x7f, 0xc1, 0x38, 0x8f, 0xe5, 0xa7, 0x78, 0x83, 0x9a, 0x2a, 0x86, 0x3c, 0xf3, 0x52,
	0x25, 0xb5, 0x24, 0xcf, 0x2b, 0x86, 0xd7, 0x30, 0xbc, 0xdf, 0x18, 0x5e, 0xc3, 0x70, 0x8e, 0xeb,
	0x7e, 0x98, 0x32, 0x1f, 0x85, 0x90, 0x1a, 0x35, 0x93, 0xa2, 0x26, 0x39, 0x57, 0x77, 0x70, 0x93,
	0x62, 0x72, 0x8b, 0x2b, 0x1a, 0x6f, 0x73, 0x5e, 0xe8, 0x0b, 0xc6, 0x99, 0xde, 0x55, 0x9c, 0x93,
	0x1f, 0x5d, 0x18, 0x4c, 0x2b, 0xfd, 0x1d, 0x0a, 0x5c, 0x51, 0xe5, 0x7c, 0x37, 0xa1, 0x7f, 0xc9,
	0x32, 0xad, 0xd8, 0x22, 0x2f, 0x5a, 0x92, 0x27, 0x60, 0x25, 0x29, 0x8d, 0x73, 0xc5, 0x6c, 0xc3,
	0x35, 0x46, 0x47, 0x51, 0x37, 0x49, 0xe9, 0x5c, 0x31, 0x72, 0x0b, 0x7d, 0x54, 0xc9, 0x9a, 0x69,
	0x9a, 0xe8, 0x5c, 0x51, 0xdb, 0x74, 0x8d, 0xd1, 0xe0, 0xec, 0xda, 0xfb, 0xff, 0x29, 0xbd, 0xfd,
	0xde, 0xde, 0xb8, 0x85, 0x8b, 0xf6, 0xe0, 0x84, 0xc3, 0x80, 0xa3, 0xa6, 0x99, 0x8e, 0xb7, 0x54,
	0x65, 0x4c, 0x0a, 0xbb, 0xe3, 0x1a, 0xa3, 0xde, 0x59, 0x78, 0x97, 0x76, 0x37, 0xed, 0x08, 0x66,
	0xbb, 0x94, 0x7a, 0x37, 0x15, 0x2c, 0x7a, 0x5c, 0xc1, 0xeb, 0x4f, 0xf2, 0x14, 0x60, 0x83, 0xac,
	0xe6, 0xd8, 0x07, 0xe5, 0xd8, 0xad, 0x17, 0x32, 0x84, 0x4e, 0xae, 0xb8, 0xdd, 0x2d, 0x85, 0xa2,
	0x24, 0x2e, 0xf4, 0x96, 0x34, 0x4b, 0x14, 0x4b, 0x8b, 0xd0, 0x6c, 0xab, 0x54, 0xda, 0x4f, 0xce,
	0x57, 0x03, 0x0e, 0xdf, 0xca, 0x04, 0xff, 0x1d, 0x6a, 0x0c, 0x56, 0x33, 0xa0, 0xf9, 0x90, 0x03,
	0x36, 0x54, 0x42, 0xe0, 0x20, 0x45, 0xbd, 0x2e, 0xe3, 0x3b, 0x8a, 0xca, 0xda, 0xf9, 0x62, 0x80,
	0x55, 0xaf, 0xa2, 0xd0, 0x05, 0x6e, 0x68, 0x6d, 0xab, 0xac, 0x8b, 0x4d, 0x2f, 0x5b, 0x27, 0x61,
	0x83, 0xdb, 0x19, 0xf5, 0xee, 0xb5, 0xe9, 0xf6, 0x85, 0x45, 0x7b, 0x70, 0xe7, 0xb3, 0x01, 0xfd,
	0x89, 0xc8, 0x34, 0x72, 0x5e, 0x65, 0xf5, 0x27, 0x47, 0x31, 0x1c, 0xf2, 0x3a, 0x4b, 0xdb, 0x2c,
	0xdd, 0x04, 0xf7, 0x70, 0xd3, 0xac, 0x25, 0xfa, 0x05, 0x3d, 0x79, 0x0d, 0xfd, 0xf6, 0x35, 0x92,
	0x63, 0xb0, 0xc7, 0x51, 0xf0, 0x66, 0x32, 0x0b, 0x83, 0xd9, 0x3c, 0x0a, 0xe3, 0xf9, 0xfb, 0x0f,
	0xd3, 0x30, 0x98, 0x5c, 0x4d, 0xc2, 0xcb, 0xe1, 0x23, 0x62, 0x41, 0xe7, 0xe3, 0xab, 0xf3, 0xa1,
	0x51, 0x16, 0xe7, 0x2f, 0x87, 0xe6, 0x85, 0x0f, 0xcf, 0x12, 0xb9, 0x69, 0x3c, 0xfd, 0xdd, 0xca,
	0xd4, 0xf8, 0x66, 0x76, 0xae, 0x83, 0xf1, 0xa2, 0x5b, 0xfe, 0x91, 0x2f, 0x7e, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xda, 0x4e, 0x4b, 0x97, 0x69, 0x04, 0x00, 0x00,
}
