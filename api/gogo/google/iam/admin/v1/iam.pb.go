// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/iam/admin/v1/iam.proto

package google_iam_admin_v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/gogo/google/api"
import _ "go.pedge.io/pb/gogo/google/iam/v1"
import _ "go.pedge.io/pb/gogo/google/iam/v1"
import _ "github.com/gogo/protobuf/types"
import google_protobuf2 "go.pedge.io/pb/gogo/google/protobuf"
import google_protobuf3 "github.com/gogo/protobuf/types"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Supported key algorithms.
type ServiceAccountKeyAlgorithm int32

const (
	// An unspecified key algorithm.
	ServiceAccountKeyAlgorithm_KEY_ALG_UNSPECIFIED ServiceAccountKeyAlgorithm = 0
	// 1k RSA Key.
	ServiceAccountKeyAlgorithm_KEY_ALG_RSA_1024 ServiceAccountKeyAlgorithm = 1
	// 2k RSA Key.
	ServiceAccountKeyAlgorithm_KEY_ALG_RSA_2048 ServiceAccountKeyAlgorithm = 2
)

var ServiceAccountKeyAlgorithm_name = map[int32]string{
	0: "KEY_ALG_UNSPECIFIED",
	1: "KEY_ALG_RSA_1024",
	2: "KEY_ALG_RSA_2048",
}
var ServiceAccountKeyAlgorithm_value = map[string]int32{
	"KEY_ALG_UNSPECIFIED": 0,
	"KEY_ALG_RSA_1024":    1,
	"KEY_ALG_RSA_2048":    2,
}

func (x ServiceAccountKeyAlgorithm) String() string {
	return proto.EnumName(ServiceAccountKeyAlgorithm_name, int32(x))
}
func (ServiceAccountKeyAlgorithm) EnumDescriptor() ([]byte, []int) { return fileDescriptorIam, []int{0} }

// Supported private key output formats.
type ServiceAccountPrivateKeyType int32

const (
	// Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.
	ServiceAccountPrivateKeyType_TYPE_UNSPECIFIED ServiceAccountPrivateKeyType = 0
	// PKCS12 format.
	// The password for the PKCS12 file is `notasecret`.
	// For more information, see https://tools.ietf.org/html/rfc7292.
	ServiceAccountPrivateKeyType_TYPE_PKCS12_FILE ServiceAccountPrivateKeyType = 1
	// Google Credentials File format.
	ServiceAccountPrivateKeyType_TYPE_GOOGLE_CREDENTIALS_FILE ServiceAccountPrivateKeyType = 2
)

var ServiceAccountPrivateKeyType_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "TYPE_PKCS12_FILE",
	2: "TYPE_GOOGLE_CREDENTIALS_FILE",
}
var ServiceAccountPrivateKeyType_value = map[string]int32{
	"TYPE_UNSPECIFIED":             0,
	"TYPE_PKCS12_FILE":             1,
	"TYPE_GOOGLE_CREDENTIALS_FILE": 2,
}

func (x ServiceAccountPrivateKeyType) String() string {
	return proto.EnumName(ServiceAccountPrivateKeyType_name, int32(x))
}
func (ServiceAccountPrivateKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{1}
}

// Supported public key output formats.
type ServiceAccountPublicKeyType int32

const (
	// Unspecified. Returns nothing here.
	ServiceAccountPublicKeyType_TYPE_NONE ServiceAccountPublicKeyType = 0
	// X509 PEM format.
	ServiceAccountPublicKeyType_TYPE_X509_PEM_FILE ServiceAccountPublicKeyType = 1
	// Raw public key.
	ServiceAccountPublicKeyType_TYPE_RAW_PUBLIC_KEY ServiceAccountPublicKeyType = 2
)

var ServiceAccountPublicKeyType_name = map[int32]string{
	0: "TYPE_NONE",
	1: "TYPE_X509_PEM_FILE",
	2: "TYPE_RAW_PUBLIC_KEY",
}
var ServiceAccountPublicKeyType_value = map[string]int32{
	"TYPE_NONE":           0,
	"TYPE_X509_PEM_FILE":  1,
	"TYPE_RAW_PUBLIC_KEY": 2,
}

func (x ServiceAccountPublicKeyType) String() string {
	return proto.EnumName(ServiceAccountPublicKeyType_name, int32(x))
}
func (ServiceAccountPublicKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{2}
}

// A view for Role objects.
type RoleView int32

const (
	// Omits the `included_permissions` field.
	// This is the default value.
	RoleView_BASIC RoleView = 0
	// Returns all fields.
	RoleView_FULL RoleView = 1
)

var RoleView_name = map[int32]string{
	0: "BASIC",
	1: "FULL",
}
var RoleView_value = map[string]int32{
	"BASIC": 0,
	"FULL":  1,
}

func (x RoleView) String() string {
	return proto.EnumName(RoleView_name, int32(x))
}
func (RoleView) EnumDescriptor() ([]byte, []int) { return fileDescriptorIam, []int{3} }

// `KeyType` filters to selectively retrieve certain varieties
// of keys.
type ListServiceAccountKeysRequest_KeyType int32

const (
	// Unspecified key type. The presence of this in the
	// message will immediately result in an error.
	ListServiceAccountKeysRequest_KEY_TYPE_UNSPECIFIED ListServiceAccountKeysRequest_KeyType = 0
	// User-managed keys (managed and rotated by the user).
	ListServiceAccountKeysRequest_USER_MANAGED ListServiceAccountKeysRequest_KeyType = 1
	// System-managed keys (managed and rotated by Google).
	ListServiceAccountKeysRequest_SYSTEM_MANAGED ListServiceAccountKeysRequest_KeyType = 2
)

var ListServiceAccountKeysRequest_KeyType_name = map[int32]string{
	0: "KEY_TYPE_UNSPECIFIED",
	1: "USER_MANAGED",
	2: "SYSTEM_MANAGED",
}
var ListServiceAccountKeysRequest_KeyType_value = map[string]int32{
	"KEY_TYPE_UNSPECIFIED": 0,
	"USER_MANAGED":         1,
	"SYSTEM_MANAGED":       2,
}

func (x ListServiceAccountKeysRequest_KeyType) String() string {
	return proto.EnumName(ListServiceAccountKeysRequest_KeyType_name, int32(x))
}
func (ListServiceAccountKeysRequest_KeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{6, 0}
}

// A stage representing a role's lifecycle phase.
type Role_RoleLaunchStage int32

const (
	// The user has indicated this role is currently in an alpha phase.
	Role_ALPHA Role_RoleLaunchStage = 0
	// The user has indicated this role is currently in a beta phase.
	Role_BETA Role_RoleLaunchStage = 1
	// The user has indicated this role is generally available.
	Role_GA Role_RoleLaunchStage = 2
	// The user has indicated this role is being deprecated.
	Role_DEPRECATED Role_RoleLaunchStage = 4
	// This role is disabled and will not contribute permissions to any members
	// it is granted to in policies.
	Role_DISABLED Role_RoleLaunchStage = 5
	// The user has indicated this role is currently in an eap phase.
	Role_EAP Role_RoleLaunchStage = 6
)

var Role_RoleLaunchStage_name = map[int32]string{
	0: "ALPHA",
	1: "BETA",
	2: "GA",
	4: "DEPRECATED",
	5: "DISABLED",
	6: "EAP",
}
var Role_RoleLaunchStage_value = map[string]int32{
	"ALPHA":      0,
	"BETA":       1,
	"GA":         2,
	"DEPRECATED": 4,
	"DISABLED":   5,
	"EAP":        6,
}

func (x Role_RoleLaunchStage) String() string {
	return proto.EnumName(Role_RoleLaunchStage_name, int32(x))
}
func (Role_RoleLaunchStage) EnumDescriptor() ([]byte, []int) { return fileDescriptorIam, []int{16, 0} }

// A stage representing a permission's lifecycle phase.
type Permission_PermissionLaunchStage int32

const (
	// The permission is currently in an alpha phase.
	Permission_ALPHA Permission_PermissionLaunchStage = 0
	// The permission is currently in a beta phase.
	Permission_BETA Permission_PermissionLaunchStage = 1
	// The permission is generally available.
	Permission_GA Permission_PermissionLaunchStage = 2
	// The permission is being deprecated.
	Permission_DEPRECATED Permission_PermissionLaunchStage = 3
)

var Permission_PermissionLaunchStage_name = map[int32]string{
	0: "ALPHA",
	1: "BETA",
	2: "GA",
	3: "DEPRECATED",
}
var Permission_PermissionLaunchStage_value = map[string]int32{
	"ALPHA":      0,
	"BETA":       1,
	"GA":         2,
	"DEPRECATED": 3,
}

func (x Permission_PermissionLaunchStage) String() string {
	return proto.EnumName(Permission_PermissionLaunchStage_name, int32(x))
}
func (Permission_PermissionLaunchStage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{26, 0}
}

// The state of the permission with regards to custom roles.
type Permission_CustomRolesSupportLevel int32

const (
	// Permission is fully supported for custom role use.
	Permission_SUPPORTED Permission_CustomRolesSupportLevel = 0
	// Permission is being tested to check custom role compatibility.
	Permission_TESTING Permission_CustomRolesSupportLevel = 1
	// Permission is not supported for custom role use.
	Permission_NOT_SUPPORTED Permission_CustomRolesSupportLevel = 2
)

var Permission_CustomRolesSupportLevel_name = map[int32]string{
	0: "SUPPORTED",
	1: "TESTING",
	2: "NOT_SUPPORTED",
}
var Permission_CustomRolesSupportLevel_value = map[string]int32{
	"SUPPORTED":     0,
	"TESTING":       1,
	"NOT_SUPPORTED": 2,
}

func (x Permission_CustomRolesSupportLevel) String() string {
	return proto.EnumName(Permission_CustomRolesSupportLevel_name, int32(x))
}
func (Permission_CustomRolesSupportLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{26, 1}
}

// A service account in the Identity and Access Management API.
//
// To create a service account, specify the `project_id` and the `account_id`
// for the account.  The `account_id` is unique within the project, and is used
// to generate the service account email address and a stable
// `unique_id`.
//
// If the account already exists, the account's resource name is returned
// in util::Status's ResourceInfo.resource_name in the format of
// projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}. The caller can
// use the name in other methods to access the account.
//
// All other methods can identify the service account using the format
// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
// Using `-` as a wildcard for the project will infer the project from
// the account. The `account` value can be the `email` address or the
// `unique_id` of the service account.
type ServiceAccount struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	//
	// Requests using `-` as a wildcard for the project will infer the project
	// from the `account` and the `account` value can be the `email` address or
	// the `unique_id` of the service account.
	//
	// In responses the resource name will always be in the format
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// @OutputOnly The id of the project that owns the service account.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @OutputOnly The unique and stable id of the service account.
	UniqueId string `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	// @OutputOnly The email address of the service account.
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Optional. A user-specified description of the service account.  Must be
	// fewer than 100 UTF-8 bytes.
	DisplayName string `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Used to perform a consistent read-modify-write.
	Etag []byte `protobuf:"bytes,7,opt,name=etag,proto3" json:"etag,omitempty"`
	// @OutputOnly. The OAuth2 client id for the service account.
	// This is used in conjunction with the OAuth2 clientconfig API to make
	// three legged OAuth2 (3LO) flows to access the data of Google users.
	Oauth2ClientId string `protobuf:"bytes,9,opt,name=oauth2_client_id,json=oauth2ClientId,proto3" json:"oauth2_client_id,omitempty"`
}

func (m *ServiceAccount) Reset()                    { *m = ServiceAccount{} }
func (m *ServiceAccount) String() string            { return proto.CompactTextString(m) }
func (*ServiceAccount) ProtoMessage()               {}
func (*ServiceAccount) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{0} }

func (m *ServiceAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccount) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ServiceAccount) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ServiceAccount) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ServiceAccount) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *ServiceAccount) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *ServiceAccount) GetOauth2ClientId() string {
	if m != nil {
		return m.Oauth2ClientId
	}
	return ""
}

// The service account create request.
type CreateServiceAccountRequest struct {
	// Required. The resource name of the project associated with the service
	// accounts, such as `projects/my-project-123`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The account id that is used to generate the service account
	// email address and a stable unique id. It is unique within a project,
	// must be 6-30 characters long, and match the regular expression
	// `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The [ServiceAccount][google.iam.admin.v1.ServiceAccount] resource to create.
	// Currently, only the following values are user assignable:
	// `display_name` .
	ServiceAccount *ServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
}

func (m *CreateServiceAccountRequest) Reset()                    { *m = CreateServiceAccountRequest{} }
func (m *CreateServiceAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceAccountRequest) ProtoMessage()               {}
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{1} }

func (m *CreateServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateServiceAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateServiceAccountRequest) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

// The service account list request.
type ListServiceAccountsRequest struct {
	// Required. The resource name of the project associated with the service
	// accounts, such as `projects/my-project-123`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional limit on the number of service accounts to include in the
	// response. Further accounts can subsequently be obtained by including the
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token]
	// in a subsequent request.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token].
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListServiceAccountsRequest) Reset()                    { *m = ListServiceAccountsRequest{} }
func (m *ListServiceAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServiceAccountsRequest) ProtoMessage()               {}
func (*ListServiceAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{2} }

func (m *ListServiceAccountsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListServiceAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListServiceAccountsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The service account list response.
type ListServiceAccountsResponse struct {
	// The list of matching service accounts.
	Accounts []*ServiceAccount `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	// To retrieve the next page of results, set
	// [ListServiceAccountsRequest.page_token][google.iam.admin.v1.ListServiceAccountsRequest.page_token]
	// to this value.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListServiceAccountsResponse) Reset()                    { *m = ListServiceAccountsResponse{} }
func (m *ListServiceAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListServiceAccountsResponse) ProtoMessage()               {}
func (*ListServiceAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{3} }

func (m *ListServiceAccountsResponse) GetAccounts() []*ServiceAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListServiceAccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The service account get request.
type GetServiceAccountRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetServiceAccountRequest) Reset()                    { *m = GetServiceAccountRequest{} }
func (m *GetServiceAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServiceAccountRequest) ProtoMessage()               {}
func (*GetServiceAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{4} }

func (m *GetServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The service account delete request.
type DeleteServiceAccountRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *DeleteServiceAccountRequest) Reset()                    { *m = DeleteServiceAccountRequest{} }
func (m *DeleteServiceAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteServiceAccountRequest) ProtoMessage()               {}
func (*DeleteServiceAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{5} }

func (m *DeleteServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The service account keys list request.
type ListServiceAccountKeysRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	//
	// Using `-` as a wildcard for the project, will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filters the types of keys the user wants to include in the list
	// response. Duplicate key types are not allowed. If no key type
	// is provided, all keys are returned.
	KeyTypes []ListServiceAccountKeysRequest_KeyType `protobuf:"varint,2,rep,packed,name=key_types,json=keyTypes,enum=google.iam.admin.v1.ListServiceAccountKeysRequest_KeyType" json:"key_types,omitempty"`
}

func (m *ListServiceAccountKeysRequest) Reset()                    { *m = ListServiceAccountKeysRequest{} }
func (m *ListServiceAccountKeysRequest) String() string            { return proto.CompactTextString(m) }
func (*ListServiceAccountKeysRequest) ProtoMessage()               {}
func (*ListServiceAccountKeysRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{6} }

func (m *ListServiceAccountKeysRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListServiceAccountKeysRequest) GetKeyTypes() []ListServiceAccountKeysRequest_KeyType {
	if m != nil {
		return m.KeyTypes
	}
	return nil
}

// The service account keys list response.
type ListServiceAccountKeysResponse struct {
	// The public keys for the service account.
	Keys []*ServiceAccountKey `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *ListServiceAccountKeysResponse) Reset()         { *m = ListServiceAccountKeysResponse{} }
func (m *ListServiceAccountKeysResponse) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountKeysResponse) ProtoMessage()    {}
func (*ListServiceAccountKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{7}
}

func (m *ListServiceAccountKeysResponse) GetKeys() []*ServiceAccountKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

// The service account key get by id request.
type GetServiceAccountKeyRequest struct {
	// The resource name of the service account key in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}/keys/{key}`.
	//
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The output format of the public key requested.
	// X509_PEM is the default output format.
	PublicKeyType ServiceAccountPublicKeyType `protobuf:"varint,2,opt,name=public_key_type,json=publicKeyType,proto3,enum=google.iam.admin.v1.ServiceAccountPublicKeyType" json:"public_key_type,omitempty"`
}

func (m *GetServiceAccountKeyRequest) Reset()                    { *m = GetServiceAccountKeyRequest{} }
func (m *GetServiceAccountKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServiceAccountKeyRequest) ProtoMessage()               {}
func (*GetServiceAccountKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{8} }

func (m *GetServiceAccountKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetServiceAccountKeyRequest) GetPublicKeyType() ServiceAccountPublicKeyType {
	if m != nil {
		return m.PublicKeyType
	}
	return ServiceAccountPublicKeyType_TYPE_NONE
}

// Represents a service account key.
//
// A service account has two sets of key-pairs: user-managed, and
// system-managed.
//
// User-managed key-pairs can be created and deleted by users.  Users are
// responsible for rotating these keys periodically to ensure security of
// their service accounts.  Users retain the private key of these key-pairs,
// and Google retains ONLY the public key.
//
// System-managed key-pairs are managed automatically by Google, and rotated
// daily without user intervention.  The private key never leaves Google's
// servers to maximize security.
//
// Public keys for all service accounts are also published at the OAuth2
// Service Account API.
type ServiceAccountKey struct {
	// The resource name of the service account key in the following format
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}/keys/{key}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The output format for the private key.
	// Only provided in `CreateServiceAccountKey` responses, not
	// in `GetServiceAccountKey` or `ListServiceAccountKey` responses.
	//
	// Google never exposes system-managed private keys, and never retains
	// user-managed private keys.
	PrivateKeyType ServiceAccountPrivateKeyType `protobuf:"varint,2,opt,name=private_key_type,json=privateKeyType,proto3,enum=google.iam.admin.v1.ServiceAccountPrivateKeyType" json:"private_key_type,omitempty"`
	// Specifies the algorithm (and possibly key size) for the key.
	KeyAlgorithm ServiceAccountKeyAlgorithm `protobuf:"varint,8,opt,name=key_algorithm,json=keyAlgorithm,proto3,enum=google.iam.admin.v1.ServiceAccountKeyAlgorithm" json:"key_algorithm,omitempty"`
	// The private key data. Only provided in `CreateServiceAccountKey`
	// responses. Make sure to keep the private key data secure because it
	// allows for the assertion of the service account identity.
	// When decoded, the private key data can be used to authenticate with
	// Google API client libraries and with
	// <a href="/sdk/gcloud/reference/auth/activate-service-account">gcloud
	// auth activate-service-account</a>.
	PrivateKeyData []byte `protobuf:"bytes,3,opt,name=private_key_data,json=privateKeyData,proto3" json:"private_key_data,omitempty"`
	// The public key data. Only provided in `GetServiceAccountKey` responses.
	PublicKeyData []byte `protobuf:"bytes,7,opt,name=public_key_data,json=publicKeyData,proto3" json:"public_key_data,omitempty"`
	// The key can be used after this timestamp.
	ValidAfterTime *google_protobuf3.Timestamp `protobuf:"bytes,4,opt,name=valid_after_time,json=validAfterTime" json:"valid_after_time,omitempty"`
	// The key can be used before this timestamp.
	ValidBeforeTime *google_protobuf3.Timestamp `protobuf:"bytes,5,opt,name=valid_before_time,json=validBeforeTime" json:"valid_before_time,omitempty"`
}

func (m *ServiceAccountKey) Reset()                    { *m = ServiceAccountKey{} }
func (m *ServiceAccountKey) String() string            { return proto.CompactTextString(m) }
func (*ServiceAccountKey) ProtoMessage()               {}
func (*ServiceAccountKey) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{9} }

func (m *ServiceAccountKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccountKey) GetPrivateKeyType() ServiceAccountPrivateKeyType {
	if m != nil {
		return m.PrivateKeyType
	}
	return ServiceAccountPrivateKeyType_TYPE_UNSPECIFIED
}

func (m *ServiceAccountKey) GetKeyAlgorithm() ServiceAccountKeyAlgorithm {
	if m != nil {
		return m.KeyAlgorithm
	}
	return ServiceAccountKeyAlgorithm_KEY_ALG_UNSPECIFIED
}

func (m *ServiceAccountKey) GetPrivateKeyData() []byte {
	if m != nil {
		return m.PrivateKeyData
	}
	return nil
}

func (m *ServiceAccountKey) GetPublicKeyData() []byte {
	if m != nil {
		return m.PublicKeyData
	}
	return nil
}

func (m *ServiceAccountKey) GetValidAfterTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.ValidAfterTime
	}
	return nil
}

func (m *ServiceAccountKey) GetValidBeforeTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.ValidBeforeTime
	}
	return nil
}

// The service account key create request.
type CreateServiceAccountKeyRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The output format of the private key. `GOOGLE_CREDENTIALS_FILE` is the
	// default output format.
	PrivateKeyType ServiceAccountPrivateKeyType `protobuf:"varint,2,opt,name=private_key_type,json=privateKeyType,proto3,enum=google.iam.admin.v1.ServiceAccountPrivateKeyType" json:"private_key_type,omitempty"`
	// Which type of key and algorithm to use for the key.
	// The default is currently a 2K RSA key.  However this may change in the
	// future.
	KeyAlgorithm ServiceAccountKeyAlgorithm `protobuf:"varint,3,opt,name=key_algorithm,json=keyAlgorithm,proto3,enum=google.iam.admin.v1.ServiceAccountKeyAlgorithm" json:"key_algorithm,omitempty"`
}

func (m *CreateServiceAccountKeyRequest) Reset()         { *m = CreateServiceAccountKeyRequest{} }
func (m *CreateServiceAccountKeyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceAccountKeyRequest) ProtoMessage()    {}
func (*CreateServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{10}
}

func (m *CreateServiceAccountKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateServiceAccountKeyRequest) GetPrivateKeyType() ServiceAccountPrivateKeyType {
	if m != nil {
		return m.PrivateKeyType
	}
	return ServiceAccountPrivateKeyType_TYPE_UNSPECIFIED
}

func (m *CreateServiceAccountKeyRequest) GetKeyAlgorithm() ServiceAccountKeyAlgorithm {
	if m != nil {
		return m.KeyAlgorithm
	}
	return ServiceAccountKeyAlgorithm_KEY_ALG_UNSPECIFIED
}

// The service account key delete request.
type DeleteServiceAccountKeyRequest struct {
	// The resource name of the service account key in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}/keys/{key}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *DeleteServiceAccountKeyRequest) Reset()         { *m = DeleteServiceAccountKeyRequest{} }
func (m *DeleteServiceAccountKeyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceAccountKeyRequest) ProtoMessage()    {}
func (*DeleteServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{11}
}

func (m *DeleteServiceAccountKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The service account sign blob request.
type SignBlobRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The bytes to sign.
	BytesToSign []byte `protobuf:"bytes,2,opt,name=bytes_to_sign,json=bytesToSign,proto3" json:"bytes_to_sign,omitempty"`
}

func (m *SignBlobRequest) Reset()                    { *m = SignBlobRequest{} }
func (m *SignBlobRequest) String() string            { return proto.CompactTextString(m) }
func (*SignBlobRequest) ProtoMessage()               {}
func (*SignBlobRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{12} }

func (m *SignBlobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignBlobRequest) GetBytesToSign() []byte {
	if m != nil {
		return m.BytesToSign
	}
	return nil
}

// The service account sign blob response.
type SignBlobResponse struct {
	// The id of the key used to sign the blob.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// The signed blob.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *SignBlobResponse) Reset()                    { *m = SignBlobResponse{} }
func (m *SignBlobResponse) String() string            { return proto.CompactTextString(m) }
func (*SignBlobResponse) ProtoMessage()               {}
func (*SignBlobResponse) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{13} }

func (m *SignBlobResponse) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignBlobResponse) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// The service account sign JWT request.
type SignJwtRequest struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}`.
	// Using `-` as a wildcard for the project will infer the project from
	// the account. The `account` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The JWT payload to sign, a JSON JWT Claim set.
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *SignJwtRequest) Reset()                    { *m = SignJwtRequest{} }
func (m *SignJwtRequest) String() string            { return proto.CompactTextString(m) }
func (*SignJwtRequest) ProtoMessage()               {}
func (*SignJwtRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{14} }

func (m *SignJwtRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignJwtRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// The service account sign JWT response.
type SignJwtResponse struct {
	// The id of the key used to sign the JWT.
	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// The signed JWT.
	SignedJwt string `protobuf:"bytes,2,opt,name=signed_jwt,json=signedJwt,proto3" json:"signed_jwt,omitempty"`
}

func (m *SignJwtResponse) Reset()                    { *m = SignJwtResponse{} }
func (m *SignJwtResponse) String() string            { return proto.CompactTextString(m) }
func (*SignJwtResponse) ProtoMessage()               {}
func (*SignJwtResponse) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{15} }

func (m *SignJwtResponse) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignJwtResponse) GetSignedJwt() string {
	if m != nil {
		return m.SignedJwt
	}
	return ""
}

// A role in the Identity and Access Management API.
type Role struct {
	// The name of the role.
	//
	// When Role is used in CreateRole, the role name must not be set.
	//
	// When Role is used in output and other input such as UpdateRole, the role
	// name is the complete path, e.g., roles/logging.viewer for curated roles
	// and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional.  A human-readable title for the role.  Typically this
	// is limited to 100 UTF-8 bytes.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Optional.  A human-readable description for the role.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The names of the permissions this role grants when bound in an IAM policy.
	IncludedPermissions []string `protobuf:"bytes,7,rep,name=included_permissions,json=includedPermissions" json:"included_permissions,omitempty"`
	// The current launch stage of the role.
	Stage Role_RoleLaunchStage `protobuf:"varint,8,opt,name=stage,proto3,enum=google.iam.admin.v1.Role_RoleLaunchStage" json:"stage,omitempty"`
	// Used to perform a consistent read-modify-write.
	Etag []byte `protobuf:"bytes,9,opt,name=etag,proto3" json:"etag,omitempty"`
	// The current deleted state of the role. This field is read only.
	// It will be ignored in calls to CreateRole and UpdateRole.
	Deleted bool `protobuf:"varint,11,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{16} }

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Role) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Role) GetIncludedPermissions() []string {
	if m != nil {
		return m.IncludedPermissions
	}
	return nil
}

func (m *Role) GetStage() Role_RoleLaunchStage {
	if m != nil {
		return m.Stage
	}
	return Role_ALPHA
}

func (m *Role) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

func (m *Role) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

// The grantable role query request.
type QueryGrantableRolesRequest struct {
	// Required. The full resource name to query from the list of grantable roles.
	//
	// The name follows the Google Cloud Platform resource format.
	// For example, a Cloud Platform project with id `my-project` will be named
	// `//cloudresourcemanager.googleapis.com/projects/my-project`.
	FullResourceName string   `protobuf:"bytes,1,opt,name=full_resource_name,json=fullResourceName,proto3" json:"full_resource_name,omitempty"`
	View             RoleView `protobuf:"varint,2,opt,name=view,proto3,enum=google.iam.admin.v1.RoleView" json:"view,omitempty"`
	// Optional limit on the number of roles to include in the response.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// QueryGrantableRolesResponse.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *QueryGrantableRolesRequest) Reset()                    { *m = QueryGrantableRolesRequest{} }
func (m *QueryGrantableRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryGrantableRolesRequest) ProtoMessage()               {}
func (*QueryGrantableRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{17} }

func (m *QueryGrantableRolesRequest) GetFullResourceName() string {
	if m != nil {
		return m.FullResourceName
	}
	return ""
}

func (m *QueryGrantableRolesRequest) GetView() RoleView {
	if m != nil {
		return m.View
	}
	return RoleView_BASIC
}

func (m *QueryGrantableRolesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryGrantableRolesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The grantable role query response.
type QueryGrantableRolesResponse struct {
	// The list of matching roles.
	Roles []*Role `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	// To retrieve the next page of results, set
	// `QueryGrantableRolesRequest.page_token` to this value.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *QueryGrantableRolesResponse) Reset()                    { *m = QueryGrantableRolesResponse{} }
func (m *QueryGrantableRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryGrantableRolesResponse) ProtoMessage()               {}
func (*QueryGrantableRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{18} }

func (m *QueryGrantableRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *QueryGrantableRolesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The request to get all roles defined under a resource.
type ListRolesRequest struct {
	// The resource name of the parent resource in one of the following formats:
	// `` (empty string) -- this refers to curated roles.
	// `organizations/{ORGANIZATION_ID}`
	// `projects/{PROJECT_ID}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional limit on the number of roles to include in the response.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier ListRolesResponse.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional view for the returned Role objects.
	View RoleView `protobuf:"varint,4,opt,name=view,proto3,enum=google.iam.admin.v1.RoleView" json:"view,omitempty"`
	// Include Roles that have been deleted.
	ShowDeleted bool `protobuf:"varint,6,opt,name=show_deleted,json=showDeleted,proto3" json:"show_deleted,omitempty"`
}

func (m *ListRolesRequest) Reset()                    { *m = ListRolesRequest{} }
func (m *ListRolesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRolesRequest) ProtoMessage()               {}
func (*ListRolesRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{19} }

func (m *ListRolesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListRolesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRolesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRolesRequest) GetView() RoleView {
	if m != nil {
		return m.View
	}
	return RoleView_BASIC
}

func (m *ListRolesRequest) GetShowDeleted() bool {
	if m != nil {
		return m.ShowDeleted
	}
	return false
}

// The response containing the roles defined under a resource.
type ListRolesResponse struct {
	// The Roles defined on this resource.
	Roles []*Role `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	// To retrieve the next page of results, set
	// `ListRolesRequest.page_token` to this value.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListRolesResponse) Reset()                    { *m = ListRolesResponse{} }
func (m *ListRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListRolesResponse) ProtoMessage()               {}
func (*ListRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{20} }

func (m *ListRolesResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ListRolesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The request to get the definition of an existing role.
type GetRoleRequest struct {
	// The resource name of the role in one of the following formats:
	// `roles/{ROLE_NAME}`
	// `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
	// `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetRoleRequest) Reset()                    { *m = GetRoleRequest{} }
func (m *GetRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRoleRequest) ProtoMessage()               {}
func (*GetRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{21} }

func (m *GetRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The request to create a new role.
type CreateRoleRequest struct {
	// The resource name of the parent resource in one of the following formats:
	// `organizations/{ORGANIZATION_ID}`
	// `projects/{PROJECT_ID}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The role id to use for this role.
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The Role resource to create.
	Role *Role `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *CreateRoleRequest) Reset()                    { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()               {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{22} }

func (m *CreateRoleRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateRoleRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *CreateRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

// The request to update a role.
type UpdateRoleRequest struct {
	// The resource name of the role in one of the following formats:
	// `roles/{ROLE_NAME}`
	// `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
	// `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The updated role.
	Role *Role `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	// A mask describing which fields in the Role have changed.
	UpdateMask *google_protobuf2.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateRoleRequest) Reset()                    { *m = UpdateRoleRequest{} }
func (m *UpdateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoleRequest) ProtoMessage()               {}
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{23} }

func (m *UpdateRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *UpdateRoleRequest) GetUpdateMask() *google_protobuf2.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// The request to delete an existing role.
type DeleteRoleRequest struct {
	// The resource name of the role in one of the following formats:
	// `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
	// `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Used to perform a consistent read-modify-write.
	Etag []byte `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (m *DeleteRoleRequest) Reset()                    { *m = DeleteRoleRequest{} }
func (m *DeleteRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoleRequest) ProtoMessage()               {}
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{24} }

func (m *DeleteRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteRoleRequest) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

// The request to undelete an existing role.
type UndeleteRoleRequest struct {
	// The resource name of the role in one of the following formats:
	// `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}`
	// `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Used to perform a consistent read-modify-write.
	Etag []byte `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (m *UndeleteRoleRequest) Reset()                    { *m = UndeleteRoleRequest{} }
func (m *UndeleteRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*UndeleteRoleRequest) ProtoMessage()               {}
func (*UndeleteRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{25} }

func (m *UndeleteRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UndeleteRoleRequest) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

// A permission which can be included by a role.
type Permission struct {
	// The name of this Permission.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The title of this Permission.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// A brief description of what this Permission is used for.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// This permission can ONLY be used in predefined roles.
	OnlyInPredefinedRoles bool `protobuf:"varint,4,opt,name=only_in_predefined_roles,json=onlyInPredefinedRoles,proto3" json:"only_in_predefined_roles,omitempty"`
	// The current launch stage of the permission.
	Stage Permission_PermissionLaunchStage `protobuf:"varint,5,opt,name=stage,proto3,enum=google.iam.admin.v1.Permission_PermissionLaunchStage" json:"stage,omitempty"`
	// The current custom role support level.
	CustomRolesSupportLevel Permission_CustomRolesSupportLevel `protobuf:"varint,6,opt,name=custom_roles_support_level,json=customRolesSupportLevel,proto3,enum=google.iam.admin.v1.Permission_CustomRolesSupportLevel" json:"custom_roles_support_level,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptorIam, []int{26} }

func (m *Permission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Permission) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Permission) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Permission) GetOnlyInPredefinedRoles() bool {
	if m != nil {
		return m.OnlyInPredefinedRoles
	}
	return false
}

func (m *Permission) GetStage() Permission_PermissionLaunchStage {
	if m != nil {
		return m.Stage
	}
	return Permission_ALPHA
}

func (m *Permission) GetCustomRolesSupportLevel() Permission_CustomRolesSupportLevel {
	if m != nil {
		return m.CustomRolesSupportLevel
	}
	return Permission_SUPPORTED
}

// A request to get permissions which can be tested on a resource.
type QueryTestablePermissionsRequest struct {
	// Required. The full resource name to query from the list of testable
	// permissions.
	//
	// The name follows the Google Cloud Platform resource format.
	// For example, a Cloud Platform project with id `my-project` will be named
	// `//cloudresourcemanager.googleapis.com/projects/my-project`.
	FullResourceName string `protobuf:"bytes,1,opt,name=full_resource_name,json=fullResourceName,proto3" json:"full_resource_name,omitempty"`
	// Optional limit on the number of permissions to include in the response.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// QueryTestablePermissionsRequest.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *QueryTestablePermissionsRequest) Reset()         { *m = QueryTestablePermissionsRequest{} }
func (m *QueryTestablePermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTestablePermissionsRequest) ProtoMessage()    {}
func (*QueryTestablePermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{27}
}

func (m *QueryTestablePermissionsRequest) GetFullResourceName() string {
	if m != nil {
		return m.FullResourceName
	}
	return ""
}

func (m *QueryTestablePermissionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *QueryTestablePermissionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response containing permissions which can be tested on a resource.
type QueryTestablePermissionsResponse struct {
	// The Permissions testable on the requested resource.
	Permissions []*Permission `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty"`
	// To retrieve the next page of results, set
	// `QueryTestableRolesRequest.page_token` to this value.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *QueryTestablePermissionsResponse) Reset()         { *m = QueryTestablePermissionsResponse{} }
func (m *QueryTestablePermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTestablePermissionsResponse) ProtoMessage()    {}
func (*QueryTestablePermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorIam, []int{28}
}

func (m *QueryTestablePermissionsResponse) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *QueryTestablePermissionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceAccount)(nil), "google.iam.admin.v1.ServiceAccount")
	proto.RegisterType((*CreateServiceAccountRequest)(nil), "google.iam.admin.v1.CreateServiceAccountRequest")
	proto.RegisterType((*ListServiceAccountsRequest)(nil), "google.iam.admin.v1.ListServiceAccountsRequest")
	proto.RegisterType((*ListServiceAccountsResponse)(nil), "google.iam.admin.v1.ListServiceAccountsResponse")
	proto.RegisterType((*GetServiceAccountRequest)(nil), "google.iam.admin.v1.GetServiceAccountRequest")
	proto.RegisterType((*DeleteServiceAccountRequest)(nil), "google.iam.admin.v1.DeleteServiceAccountRequest")
	proto.RegisterType((*ListServiceAccountKeysRequest)(nil), "google.iam.admin.v1.ListServiceAccountKeysRequest")
	proto.RegisterType((*ListServiceAccountKeysResponse)(nil), "google.iam.admin.v1.ListServiceAccountKeysResponse")
	proto.RegisterType((*GetServiceAccountKeyRequest)(nil), "google.iam.admin.v1.GetServiceAccountKeyRequest")
	proto.RegisterType((*ServiceAccountKey)(nil), "google.iam.admin.v1.ServiceAccountKey")
	proto.RegisterType((*CreateServiceAccountKeyRequest)(nil), "google.iam.admin.v1.CreateServiceAccountKeyRequest")
	proto.RegisterType((*DeleteServiceAccountKeyRequest)(nil), "google.iam.admin.v1.DeleteServiceAccountKeyRequest")
	proto.RegisterType((*SignBlobRequest)(nil), "google.iam.admin.v1.SignBlobRequest")
	proto.RegisterType((*SignBlobResponse)(nil), "google.iam.admin.v1.SignBlobResponse")
	proto.RegisterType((*SignJwtRequest)(nil), "google.iam.admin.v1.SignJwtRequest")
	proto.RegisterType((*SignJwtResponse)(nil), "google.iam.admin.v1.SignJwtResponse")
	proto.RegisterType((*Role)(nil), "google.iam.admin.v1.Role")
	proto.RegisterType((*QueryGrantableRolesRequest)(nil), "google.iam.admin.v1.QueryGrantableRolesRequest")
	proto.RegisterType((*QueryGrantableRolesResponse)(nil), "google.iam.admin.v1.QueryGrantableRolesResponse")
	proto.RegisterType((*ListRolesRequest)(nil), "google.iam.admin.v1.ListRolesRequest")
	proto.RegisterType((*ListRolesResponse)(nil), "google.iam.admin.v1.ListRolesResponse")
	proto.RegisterType((*GetRoleRequest)(nil), "google.iam.admin.v1.GetRoleRequest")
	proto.RegisterType((*CreateRoleRequest)(nil), "google.iam.admin.v1.CreateRoleRequest")
	proto.RegisterType((*UpdateRoleRequest)(nil), "google.iam.admin.v1.UpdateRoleRequest")
	proto.RegisterType((*DeleteRoleRequest)(nil), "google.iam.admin.v1.DeleteRoleRequest")
	proto.RegisterType((*UndeleteRoleRequest)(nil), "google.iam.admin.v1.UndeleteRoleRequest")
	proto.RegisterType((*Permission)(nil), "google.iam.admin.v1.Permission")
	proto.RegisterType((*QueryTestablePermissionsRequest)(nil), "google.iam.admin.v1.QueryTestablePermissionsRequest")
	proto.RegisterType((*QueryTestablePermissionsResponse)(nil), "google.iam.admin.v1.QueryTestablePermissionsResponse")
	proto.RegisterEnum("google.iam.admin.v1.ServiceAccountKeyAlgorithm", ServiceAccountKeyAlgorithm_name, ServiceAccountKeyAlgorithm_value)
	proto.RegisterEnum("google.iam.admin.v1.ServiceAccountPrivateKeyType", ServiceAccountPrivateKeyType_name, ServiceAccountPrivateKeyType_value)
	proto.RegisterEnum("google.iam.admin.v1.ServiceAccountPublicKeyType", ServiceAccountPublicKeyType_name, ServiceAccountPublicKeyType_value)
	proto.RegisterEnum("google.iam.admin.v1.RoleView", RoleView_name, RoleView_value)
	proto.RegisterEnum("google.iam.admin.v1.ListServiceAccountKeysRequest_KeyType", ListServiceAccountKeysRequest_KeyType_name, ListServiceAccountKeysRequest_KeyType_value)
	proto.RegisterEnum("google.iam.admin.v1.Role_RoleLaunchStage", Role_RoleLaunchStage_name, Role_RoleLaunchStage_value)
	proto.RegisterEnum("google.iam.admin.v1.Permission_PermissionLaunchStage", Permission_PermissionLaunchStage_name, Permission_PermissionLaunchStage_value)
	proto.RegisterEnum("google.iam.admin.v1.Permission_CustomRolesSupportLevel", Permission_CustomRolesSupportLevel_name, Permission_CustomRolesSupportLevel_value)
}

func init() { proto.RegisterFile("google/iam/admin/v1/iam.proto", fileDescriptorIam) }

var fileDescriptorIam = []byte{
	// 2404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xcf, 0x73, 0xdb, 0xc6,
	0xf5, 0x0f, 0x28, 0xea, 0x07, 0x9f, 0x24, 0x0a, 0x5a, 0xc9, 0x16, 0xbf, 0x94, 0x65, 0x33, 0xfb,
	0x75, 0x1c, 0x9a, 0xb5, 0x45, 0x89, 0x96, 0xeb, 0x54, 0x1e, 0x27, 0xa5, 0x48, 0x98, 0xa1, 0x45,
	0xcb, 0x2c, 0x48, 0x35, 0xf1, 0xb4, 0x1d, 0x0c, 0x44, 0xac, 0x68, 0x44, 0x20, 0x01, 0x13, 0xa0,
	0x54, 0x3a, 0x93, 0xce, 0xb4, 0x87, 0x5e, 0x32, 0xed, 0xb4, 0x93, 0x1c, 0x72, 0x4a, 0x67, 0x7a,
	0x69, 0x6f, 0xbd, 0x74, 0xa6, 0xd3, 0x4e, 0xfe, 0x83, 0x1e, 0x7b, 0xe8, 0x3f, 0x90, 0x99, 0xfe,
	0x0b, 0x3d, 0x76, 0x76, 0x01, 0x88, 0x20, 0x09, 0x40, 0x90, 0x93, 0xf6, 0xc2, 0xc1, 0xbe, 0xb7,
	0xef, 0xbd, 0xcf, 0xbe, 0x7d, 0xfb, 0xf6, 0xed, 0x23, 0x6c, 0xb4, 0x75, 0xbd, 0xad, 0x91, 0xbc,
	0x2a, 0x77, 0xf2, 0xb2, 0xd2, 0x51, 0xbb, 0xf9, 0xd3, 0x6d, 0x3a, 0xd8, 0x34, 0x7a, 0xba, 0xa5,
	0xa3, 0x15, 0x9b, 0xbd, 0x49, 0x29, 0x8c, 0xbd, 0x79, 0xba, 0x9d, 0xbe, 0xe6, 0xc8, 0xc8, 0x86,
	0x9a, 0x97, 0xbb, 0x5d, 0xdd, 0x92, 0x2d, 0x55, 0xef, 0x9a, 0xb6, 0x48, 0xfa, 0xba, 0x47, 0xa3,
	0xad, 0x4b, 0x32, 0x74, 0x4d, 0x6d, 0x0d, 0x1c, 0x7e, 0x7a, 0x94, 0x3f, 0xc2, 0x5b, 0x77, 0x78,
	0x6c, 0x74, 0xd4, 0x3f, 0xce, 0x93, 0x8e, 0x61, 0xb9, 0xcc, 0xcc, 0x38, 0xf3, 0x58, 0x25, 0x9a,
	0x22, 0x75, 0x64, 0xf3, 0xc4, 0x99, 0x71, 0x63, 0x7c, 0x86, 0xa5, 0x76, 0x88, 0x69, 0xc9, 0x1d,
	0xc3, 0x9e, 0x80, 0xff, 0xc9, 0x41, 0xb2, 0x41, 0x7a, 0xa7, 0x6a, 0x8b, 0x14, 0x5b, 0x2d, 0xbd,
	0xdf, 0xb5, 0x10, 0x82, 0x78, 0x57, 0xee, 0x90, 0x14, 0x97, 0xe1, 0xb2, 0x09, 0x91, 0x7d, 0xa3,
	0x0d, 0x00, 0xa3, 0xa7, 0x7f, 0x44, 0x5a, 0x96, 0xa4, 0x2a, 0xa9, 0x18, 0xe3, 0x24, 0x1c, 0x4a,
	0x55, 0x41, 0xeb, 0x90, 0xe8, 0x77, 0xd5, 0x97, 0x7d, 0x42, 0xb9, 0x71, 0xc6, 0x9d, 0xb3, 0x09,
	0x55, 0x05, 0xad, 0xc2, 0x34, 0xe9, 0xc8, 0xaa, 0x96, 0x9a, 0x66, 0x0c, 0x7b, 0x80, 0xde, 0x84,
	0x05, 0x45, 0x35, 0x0d, 0x4d, 0x1e, 0x48, 0xcc, 0xda, 0x0c, 0x63, 0xce, 0x3b, 0xb4, 0x03, 0x6a,
	0x14, 0x41, 0x9c, 0x58, 0x72, 0x3b, 0x35, 0x9b, 0xe1, 0xb2, 0x0b, 0x22, 0xfb, 0x46, 0x59, 0xe0,
	0x75, 0xb9, 0x6f, 0xbd, 0x28, 0x48, 0x2d, 0x4d, 0x25, 0x5d, 0x06, 0x27, 0xc1, 0x44, 0x93, 0x36,
	0xbd, 0xc4, 0xc8, 0x55, 0x05, 0x7f, 0xc9, 0xc1, 0x7a, 0xa9, 0x47, 0x64, 0x8b, 0x8c, 0xae, 0x4f,
	0x24, 0x2f, 0xfb, 0xc4, 0x0c, 0x5c, 0xa6, 0x6c, 0xcf, 0xf2, 0x2c, 0xd3, 0xa1, 0x54, 0x15, 0x54,
	0x83, 0x25, 0xd3, 0xd6, 0x25, 0x39, 0xc4, 0xd4, 0x54, 0x86, 0xcb, 0xce, 0x17, 0xfe, 0x7f, 0xd3,
	0x27, 0x2a, 0x36, 0xc7, 0xec, 0x26, 0xcd, 0x91, 0x31, 0xd6, 0x20, 0x5d, 0x53, 0x4d, 0x6b, 0x74,
	0x96, 0x19, 0x06, 0x6f, 0x1d, 0x12, 0x86, 0xdc, 0x26, 0x92, 0xa9, 0xbe, 0x22, 0x0c, 0xdd, 0xb4,
	0x38, 0x47, 0x09, 0x0d, 0xf5, 0x95, 0xbd, 0x45, 0x94, 0x69, 0xe9, 0x27, 0xa4, 0xcb, 0x70, 0xd1,
	0x2d, 0x92, 0xdb, 0xa4, 0x49, 0x09, 0xf8, 0x97, 0x1c, 0xac, 0xfb, 0x9a, 0x33, 0x0d, 0xbd, 0x6b,
	0x12, 0xf4, 0x1e, 0xcc, 0x39, 0x6b, 0x32, 0x53, 0x5c, 0x66, 0x2a, 0xea, 0xa2, 0xce, 0x85, 0xd0,
	0x2d, 0x58, 0xea, 0x92, 0x9f, 0x5a, 0x92, 0x07, 0x84, 0xed, 0xc0, 0x45, 0x4a, 0xae, 0x9f, 0x03,
	0xd9, 0x84, 0x54, 0x85, 0x58, 0x91, 0xf7, 0x04, 0x6f, 0xc3, 0x7a, 0x99, 0x68, 0xe4, 0x12, 0xdb,
	0x48, 0x83, 0x7a, 0x63, 0x72, 0xad, 0xfb, 0x64, 0x10, 0xea, 0xdd, 0x0f, 0x20, 0x71, 0x42, 0x06,
	0x92, 0x35, 0x30, 0x88, 0x99, 0x8a, 0x65, 0xa6, 0xb2, 0xc9, 0xc2, 0xae, 0xaf, 0x0b, 0x42, 0x55,
	0x6f, 0xee, 0x93, 0x41, 0x73, 0x60, 0x10, 0x71, 0xee, 0xc4, 0xfe, 0x30, 0x71, 0x15, 0x66, 0x1d,
	0x22, 0x4a, 0xc1, 0xea, 0xbe, 0xf0, 0x5c, 0x6a, 0x3e, 0xaf, 0x0b, 0xd2, 0xe1, 0x41, 0xa3, 0x2e,
	0x94, 0xaa, 0x8f, 0xab, 0x42, 0x99, 0x7f, 0x03, 0xf1, 0xb0, 0x70, 0xd8, 0x10, 0x44, 0xe9, 0x69,
	0xf1, 0xa0, 0x58, 0x11, 0xca, 0x3c, 0x87, 0x10, 0x24, 0x1b, 0xcf, 0x1b, 0x4d, 0xe1, 0xe9, 0x39,
	0x2d, 0x86, 0x7f, 0x0c, 0xd7, 0x83, 0xac, 0x3b, 0xfb, 0xb8, 0x0b, 0xf1, 0x13, 0x32, 0x70, 0xf7,
	0xf0, 0x56, 0x84, 0x3d, 0xdc, 0x27, 0x03, 0x91, 0xc9, 0xe0, 0x4f, 0x39, 0x58, 0x9f, 0xd8, 0x1b,
	0xca, 0x0e, 0xf1, 0xda, 0x87, 0xb0, 0x64, 0xf4, 0x8f, 0x34, 0xb5, 0x25, 0xb9, 0xce, 0x63, 0xdb,
	0x9e, 0x2c, 0x6c, 0x45, 0x30, 0x5d, 0x67, 0x92, 0xae, 0xc7, 0x16, 0x0d, 0xef, 0x10, 0xff, 0x6d,
	0x0a, 0x96, 0x27, 0xa0, 0xf8, 0x62, 0xf8, 0x11, 0xf0, 0x46, 0x4f, 0x3d, 0x95, 0x2d, 0x32, 0x0e,
	0x62, 0x3b, 0x0a, 0x08, 0x5b, 0xd4, 0x45, 0x91, 0x34, 0x46, 0xc6, 0xa8, 0x09, 0x8b, 0x54, 0xa9,
	0xac, 0xb5, 0xf5, 0x9e, 0x6a, 0xbd, 0xe8, 0xa4, 0xe6, 0x98, 0xe6, 0x7c, 0x34, 0xcf, 0x16, 0x5d,
	0x31, 0x71, 0xe1, 0xc4, 0x33, 0xa2, 0x79, 0xcc, 0x0b, 0x59, 0x91, 0x2d, 0x99, 0x9d, 0xd9, 0x05,
	0xaf, 0xfd, 0xb2, 0x6c, 0xc9, 0xf4, 0x5c, 0x79, 0x1c, 0xcc, 0x26, 0xda, 0x09, 0x71, 0xe8, 0x2e,
	0x36, 0xaf, 0x0c, 0xfc, 0xa9, 0xac, 0xa9, 0x8a, 0x24, 0x1f, 0x5b, 0xa4, 0x27, 0xd1, 0x44, 0xcf,
	0x52, 0xf1, 0x7c, 0x21, 0xed, 0x42, 0x75, 0x6f, 0x81, 0xcd, 0xa6, 0x7b, 0x0b, 0x88, 0x49, 0x26,
	0x53, 0xa4, 0x22, 0x94, 0x88, 0x1e, 0xc3, 0xb2, 0xad, 0xe5, 0x88, 0x1c, 0xeb, 0x3d, 0x62, 0xab,
	0x99, 0xbe, 0x50, 0xcd, 0x12, 0x13, 0xda, 0x63, 0x32, 0x94, 0x8a, 0xff, 0xc5, 0xc1, 0x75, 0xbf,
	0xec, 0x7b, 0x41, 0x34, 0xfd, 0x6f, 0x77, 0x72, 0xea, 0x5b, 0xd8, 0x49, 0xbc, 0x03, 0xd7, 0xfd,
	0xf2, 0x53, 0xf8, 0x42, 0x71, 0x15, 0x96, 0x1a, 0x6a, 0xbb, 0xbb, 0xa7, 0xe9, 0x47, 0x61, 0xfe,
	0xc0, 0xb0, 0x78, 0x34, 0xb0, 0x88, 0x29, 0x59, 0xba, 0x64, 0xaa, 0x6d, 0x3b, 0xa5, 0x2e, 0x88,
	0xf3, 0x8c, 0xd8, 0xd4, 0xa9, 0x0a, 0x5c, 0x01, 0x7e, 0xa8, 0xca, 0xc9, 0x02, 0x57, 0x60, 0x86,
	0x2e, 0x55, 0x55, 0x1c, 0x6d, 0xd3, 0x27, 0x64, 0x50, 0x55, 0xd0, 0x35, 0x48, 0x50, 0x2d, 0xb2,
	0xd5, 0xef, 0x11, 0x47, 0xd5, 0x90, 0x80, 0xdf, 0x85, 0x24, 0x55, 0xf4, 0xe4, 0x2c, 0xf4, 0x8e,
	0x4c, 0xc1, 0xac, 0x21, 0x0f, 0x34, 0x5d, 0x76, 0x2f, 0x48, 0x77, 0x88, 0x2b, 0xf6, 0x9a, 0x98,
	0x7c, 0x38, 0x8e, 0x0d, 0x00, 0x6a, 0x96, 0x28, 0xd2, 0x47, 0x67, 0x96, 0x7b, 0xcf, 0xda, 0x94,
	0x27, 0x67, 0x16, 0xfe, 0x7b, 0x0c, 0xe2, 0xa2, 0xae, 0x11, 0x5f, 0xfb, 0xab, 0x30, 0x6d, 0xa9,
	0x96, 0x46, 0x1c, 0x31, 0x7b, 0x80, 0x32, 0x30, 0xaf, 0x10, 0xb3, 0xd5, 0x53, 0x0d, 0x5a, 0x79,
	0x39, 0xd7, 0x9f, 0x97, 0x84, 0xb6, 0x61, 0x55, 0xed, 0xb6, 0xb4, 0xbe, 0x42, 0x14, 0xc9, 0x20,
	0xbd, 0x8e, 0x6a, 0x9a, 0xb4, 0x46, 0x4b, 0xcd, 0x66, 0xa6, 0xb2, 0x09, 0x71, 0xc5, 0xe5, 0xd5,
	0x87, 0x2c, 0xf4, 0x1e, 0x4c, 0x9b, 0x96, 0xdc, 0x26, 0xce, 0x91, 0xbf, 0xed, 0x1b, 0x28, 0x14,
	0x28, 0xfb, 0xa9, 0xc9, 0xfd, 0x6e, 0xeb, 0x45, 0x83, 0x0a, 0x88, 0xb6, 0xdc, 0x79, 0x05, 0x93,
	0xf0, 0x54, 0x30, 0x29, 0x98, 0x55, 0x58, 0xbc, 0x28, 0xa9, 0xf9, 0x0c, 0x97, 0x9d, 0x13, 0xdd,
	0x21, 0x3e, 0x84, 0xa5, 0x31, 0x3d, 0x28, 0x01, 0xd3, 0xc5, 0x5a, 0xfd, 0xfd, 0x22, 0xff, 0x06,
	0x9a, 0x83, 0xf8, 0x9e, 0xd0, 0x2c, 0xf2, 0x1c, 0x9a, 0x81, 0x58, 0xa5, 0xc8, 0xc7, 0x50, 0x12,
	0xa0, 0x2c, 0xd4, 0x45, 0xa1, 0x54, 0x6c, 0x0a, 0x65, 0x3e, 0x8e, 0x16, 0x60, 0xae, 0x5c, 0x6d,
	0x14, 0xf7, 0x6a, 0x42, 0x99, 0x9f, 0x46, 0xb3, 0x30, 0x25, 0x14, 0xeb, 0xfc, 0x0c, 0xfe, 0x2b,
	0x07, 0xe9, 0x1f, 0xf4, 0x49, 0x6f, 0x50, 0xe9, 0xc9, 0x5d, 0x4b, 0x3e, 0xd2, 0x08, 0xb5, 0x72,
	0x7e, 0x15, 0xde, 0x01, 0x74, 0xdc, 0xd7, 0x34, 0xa9, 0x47, 0x4c, 0xbd, 0xdf, 0x6b, 0x11, 0xc9,
	0xe3, 0x71, 0x9e, 0x72, 0x44, 0x87, 0xc1, 0x6a, 0xb2, 0x6d, 0x88, 0x9f, 0xaa, 0xe4, 0xcc, 0x39,
	0x94, 0x1b, 0x81, 0x1e, 0xf9, 0xa1, 0x4a, 0xce, 0x44, 0x36, 0x75, 0xb4, 0x6a, 0x99, 0x0a, 0xad,
	0x5a, 0xe2, 0xe3, 0x55, 0xcb, 0x29, 0xac, 0xfb, 0x42, 0x77, 0xc2, 0x2b, 0x0f, 0xd3, 0x3d, 0x4a,
	0x70, 0x6e, 0xbb, 0xff, 0x0b, 0x84, 0x23, 0xda, 0xf3, 0x22, 0x17, 0x29, 0x5f, 0x71, 0xc0, 0xd3,
	0x8b, 0x76, 0xc4, 0x53, 0x57, 0x61, 0xc6, 0x90, 0x7b, 0xa4, 0x6b, 0x39, 0xde, 0x71, 0x46, 0xdf,
	0xa4, 0x2c, 0x3b, 0xf7, 0x67, 0x3c, 0xba, 0x3f, 0xdf, 0x84, 0x05, 0xf3, 0x85, 0x7e, 0x26, 0xb9,
	0x51, 0x34, 0xc3, 0xa2, 0x68, 0x9e, 0xd2, 0xca, 0x4e, 0x24, 0x69, 0xb0, 0xec, 0x41, 0xff, 0xdf,
	0x76, 0xd6, 0x4d, 0x48, 0x56, 0x08, 0x33, 0x16, 0x96, 0xf1, 0x4c, 0x58, 0xb6, 0x2f, 0x04, 0xef,
	0xc4, 0x20, 0x97, 0xae, 0xc1, 0x2c, 0xc5, 0x30, 0xac, 0xc2, 0x67, 0xe8, 0xb0, 0xaa, 0xa0, 0xbb,
	0x10, 0xa7, 0x5f, 0x4e, 0xdd, 0x1d, 0xb2, 0x06, 0x36, 0x0d, 0x7f, 0xc6, 0xc1, 0xf2, 0xa1, 0xa1,
	0x8c, 0x59, 0xf5, 0x4b, 0x2b, 0xae, 0xe2, 0x58, 0x24, 0xc5, 0xe8, 0x21, 0xcc, 0xf7, 0x99, 0x5e,
	0xf6, 0xda, 0x72, 0xe0, 0x4c, 0xde, 0x90, 0x8f, 0xe9, 0x83, 0xec, 0xa9, 0x6c, 0x9e, 0x88, 0x60,
	0x4f, 0xa7, 0xdf, 0xf8, 0x21, 0x2c, 0xdb, 0x3b, 0x75, 0x11, 0x28, 0x37, 0x7f, 0xc4, 0x86, 0xf9,
	0x03, 0x3f, 0x82, 0x95, 0xc3, 0xae, 0xf2, 0xda, 0xe2, 0x5f, 0x4f, 0x01, 0x0c, 0x73, 0xdc, 0xb7,
	0x9a, 0x61, 0x1f, 0x40, 0x4a, 0xef, 0x6a, 0x03, 0x49, 0xed, 0x4a, 0x46, 0x8f, 0x28, 0xe4, 0x58,
	0xa5, 0x19, 0xde, 0x8e, 0xb9, 0x38, 0x0b, 0xd2, 0x2b, 0x94, 0x5f, 0xed, 0xd6, 0xcf, 0xb9, 0x2c,
	0x42, 0xd1, 0xbe, 0x9b, 0x67, 0xa7, 0xd9, 0x29, 0xb8, 0xef, 0xeb, 0xfc, 0x21, 0x68, 0xcf, 0xa7,
	0x4f, 0xce, 0xb5, 0x20, 0xdd, 0xea, 0x9b, 0x96, 0xde, 0xb1, 0x2d, 0x4b, 0x66, 0xdf, 0x30, 0xf4,
	0x9e, 0x25, 0x69, 0xe4, 0x94, 0x68, 0xec, 0xb0, 0x24, 0x0b, 0x0f, 0x2e, 0xb2, 0x50, 0x62, 0x1a,
	0x18, 0xba, 0x86, 0x2d, 0x5f, 0xa3, 0xe2, 0xe2, 0x5a, 0xcb, 0x9f, 0x81, 0xcb, 0x70, 0xc5, 0x17,
	0xd5, 0x65, 0x32, 0xf8, 0x14, 0x7e, 0x1f, 0xd6, 0x02, 0x2c, 0xa3, 0x45, 0x48, 0x34, 0x0e, 0xeb,
	0xf5, 0x67, 0x62, 0x93, 0x3d, 0x17, 0xe6, 0x61, 0xb6, 0x29, 0x34, 0x9a, 0xd5, 0x83, 0x0a, 0xcf,
	0xa1, 0x65, 0x58, 0x3c, 0x78, 0xd6, 0x94, 0x86, 0xfc, 0x18, 0x2d, 0xe5, 0x6f, 0xb0, 0xcc, 0xd9,
	0xa4, 0x15, 0xda, 0x91, 0x46, 0x3c, 0xf7, 0xda, 0xeb, 0x65, 0xfe, 0x6f, 0xf2, 0xf8, 0xfc, 0x15,
	0x07, 0x99, 0x60, 0x34, 0x4e, 0x7e, 0x2a, 0xc2, 0xbc, 0xf7, 0x5e, 0xb6, 0xb3, 0xd4, 0x8d, 0x0b,
	0x76, 0x4a, 0xf4, 0xca, 0x44, 0xcd, 0x58, 0x39, 0x19, 0xd2, 0xc1, 0xf5, 0x1d, 0x5a, 0x83, 0x15,
	0xfa, 0x48, 0x2b, 0xd6, 0x2a, 0x63, 0x6f, 0xb4, 0x55, 0xe0, 0x5d, 0x86, 0xd8, 0x28, 0x4a, 0xdb,
	0x5b, 0x85, 0x1d, 0x9e, 0x1b, 0xa7, 0x16, 0xb6, 0x76, 0xde, 0xe1, 0x63, 0x39, 0x0d, 0xae, 0x85,
	0x15, 0xa7, 0x54, 0xca, 0xe7, 0x15, 0xe8, 0x52, 0xeb, 0xfb, 0xa5, 0xc6, 0x76, 0x41, 0x7a, 0x5c,
	0xad, 0x09, 0x3c, 0x87, 0x32, 0x70, 0x8d, 0x51, 0x2b, 0xcf, 0x9e, 0x55, 0x6a, 0x82, 0x54, 0x12,
	0x85, 0xb2, 0x70, 0xd0, 0xac, 0x16, 0x6b, 0x0d, 0x7b, 0x46, 0x2c, 0xf7, 0x13, 0x58, 0x0f, 0x79,
	0x59, 0xd1, 0xe0, 0x61, 0x0a, 0x0e, 0x9e, 0x1d, 0x08, 0xfc, 0x1b, 0xe8, 0x2a, 0x20, 0x36, 0xfc,
	0xf0, 0xfe, 0xd6, 0xf7, 0xa4, 0xba, 0xf0, 0xd4, 0xb5, 0xb3, 0x06, 0x2b, 0x8c, 0x2e, 0x16, 0x3f,
	0x90, 0xea, 0x87, 0x7b, 0xb5, 0x6a, 0x49, 0xda, 0x17, 0x9e, 0xf3, 0xb1, 0xdc, 0x0d, 0x98, 0x73,
	0x2f, 0x21, 0x1a, 0xd0, 0x7b, 0xc5, 0x46, 0xb5, 0x64, 0x07, 0xf4, 0xe3, 0xc3, 0x5a, 0x8d, 0xe7,
	0x0a, 0x5f, 0xa4, 0x61, 0xaa, 0x5a, 0x7c, 0x8a, 0xfe, 0xc0, 0xc1, 0x8a, 0x4f, 0x97, 0x01, 0xe5,
	0x23, 0x3e, 0xa4, 0xdd, 0xd8, 0x4c, 0x6f, 0x45, 0x17, 0xb0, 0xc3, 0x07, 0xdf, 0xfd, 0xc5, 0x3f,
	0xbe, 0xfe, 0x2c, 0xf6, 0x36, 0x7a, 0x2b, 0x7f, 0xba, 0x9d, 0xff, 0x98, 0x86, 0xf2, 0x23, 0xa7,
	0x41, 0x65, 0xe6, 0x73, 0x9f, 0xe4, 0xcd, 0x31, 0x44, 0x5f, 0x70, 0xb0, 0x3c, 0xf1, 0xd6, 0x45,
	0x77, 0x7d, 0xcd, 0x06, 0xf5, 0x2b, 0xd2, 0x51, 0x5a, 0x24, 0x38, 0xcf, 0x80, 0xdd, 0x46, 0x6f,
	0xfb, 0x01, 0x1b, 0xc7, 0x95, 0xcf, 0x7d, 0x82, 0x7e, 0xc7, 0xc1, 0xaa, 0xdf, 0xdb, 0x09, 0xf9,
	0x3b, 0x25, 0xa4, 0xc9, 0x15, 0x0d, 0xe0, 0x16, 0x03, 0x98, 0xc3, 0xd1, 0x3c, 0xb7, 0xcb, 0xe5,
	0xd0, 0xe7, 0x1c, 0xac, 0xda, 0xd7, 0xea, 0x18, 0xc2, 0x28, 0xf6, 0xa2, 0x81, 0x2a, 0x30, 0x50,
	0x77, 0xd2, 0x51, 0xbd, 0x46, 0x61, 0xfd, 0x96, 0x83, 0x55, 0xbf, 0xb7, 0x58, 0x80, 0xe3, 0x42,
	0xda, 0x4a, 0xe9, 0xab, 0x13, 0x57, 0xb9, 0xd0, 0x31, 0xac, 0x81, 0xbb, 0x99, 0xb9, 0xc8, 0x9b,
	0xf9, 0x17, 0x0e, 0xae, 0xfa, 0xb7, 0x6c, 0x50, 0xe1, 0xf2, 0xdd, 0xa5, 0xf4, 0xbd, 0x4b, 0xc9,
	0x38, 0x47, 0x63, 0x87, 0x81, 0xde, 0x44, 0x77, 0x22, 0x82, 0xce, 0x9f, 0x50, 0x78, 0x7f, 0xe4,
	0x60, 0xd5, 0xaf, 0x1b, 0x14, 0xe0, 0xcd, 0x90, 0xc6, 0x51, 0x3a, 0x62, 0x1b, 0x0a, 0x7f, 0x97,
	0x01, 0xdd, 0x42, 0x9b, 0xd1, 0x80, 0x32, 0x9c, 0xd4, 0xc9, 0x7f, 0xe2, 0x60, 0x2d, 0xa0, 0xdb,
	0x80, 0xee, 0x45, 0x3e, 0x34, 0xaf, 0x01, 0xf8, 0x01, 0x03, 0xbc, 0x8d, 0x2f, 0xe5, 0x59, 0x1a,
	0xaa, 0x5f, 0x72, 0xb0, 0x16, 0xd0, 0x36, 0x08, 0x40, 0x1c, 0xde, 0x64, 0x08, 0x0c, 0x58, 0xc7,
	0xa5, 0xb9, 0xcb, 0xba, 0xf4, 0x73, 0x0e, 0xe6, 0xdc, 0xb6, 0x02, 0xba, 0xe9, 0xef, 0x8e, 0xd1,
	0x06, 0x46, 0xfa, 0xad, 0x0b, 0x66, 0x39, 0xd1, 0xf8, 0x90, 0x21, 0xba, 0x8f, 0xb7, 0xa2, 0x9e,
	0x6c, 0xd3, 0xd1, 0x40, 0xfd, 0xf6, 0x1b, 0x0e, 0x66, 0x9d, 0x26, 0x43, 0x50, 0xb2, 0x19, 0x69,
	0x61, 0xa4, 0x6f, 0x86, 0x4f, 0x72, 0x30, 0xed, 0x32, 0x4c, 0x3b, 0x38, 0x7f, 0x19, 0x4c, 0x4f,
	0xce, 0x2c, 0x0a, 0xe9, 0x53, 0x0e, 0x16, 0x2a, 0xc4, 0xaa, 0xca, 0x9d, 0x3a, 0xfb, 0xe7, 0x06,
	0x61, 0xaf, 0x49, 0xfb, 0x64, 0x9c, 0x33, 0x5d, 0x58, 0x57, 0xc6, 0xe6, 0xd8, 0x5c, 0xfc, 0x7d,
	0x86, 0x63, 0x17, 0xbf, 0xc3, 0x70, 0xb8, 0x85, 0xd9, 0x05, 0x58, 0xda, 0x5e, 0xe3, 0xbf, 0xe6,
	0x60, 0xa1, 0x11, 0x86, 0xa6, 0x11, 0x1d, 0x4d, 0x89, 0xa1, 0x79, 0x74, 0x39, 0x34, 0xa6, 0x47,
	0x3f, 0x75, 0xcf, 0x9f, 0x39, 0x40, 0xb4, 0xec, 0xa3, 0x44, 0x4f, 0xa9, 0x96, 0x1d, 0x33, 0x39,
	0x39, 0xc5, 0x05, 0x77, 0x3b, 0xc2, 0x4c, 0x67, 0x1b, 0xab, 0x0c, 0x70, 0x09, 0xbf, 0x7b, 0x19,
	0xc0, 0xd6, 0x84, 0x3e, 0x0a, 0xfb, 0xf7, 0x1c, 0xac, 0xf8, 0xb4, 0x1e, 0x02, 0x2a, 0x99, 0xe0,
	0xfe, 0x4a, 0x40, 0x25, 0x13, 0xd2, 0xd5, 0xc0, 0x59, 0xb6, 0x0a, 0x8c, 0x37, 0xe8, 0x2a, 0xd8,
	0x23, 0x66, 0xf7, 0xe5, 0xe4, 0x74, 0x0a, 0xb2, 0x03, 0x89, 0xf3, 0x77, 0x3e, 0x7a, 0x2b, 0xf0,
	0x6a, 0x18, 0xc1, 0x73, 0xeb, 0xa2, 0x69, 0x0e, 0x8a, 0x65, 0x86, 0x62, 0x1e, 0x25, 0xce, 0x51,
	0x20, 0x02, 0xb3, 0xce, 0x43, 0x3f, 0xe0, 0xec, 0x8d, 0xb6, 0x01, 0xd2, 0xc1, 0xaf, 0x68, 0x9c,
	0x66, 0xda, 0x57, 0x11, 0x1a, 0x1e, 0x38, 0x66, 0x83, 0xa6, 0x9e, 0x9f, 0x01, 0x0c, 0x3b, 0x05,
	0xe8, 0x56, 0x48, 0xfe, 0x8e, 0x68, 0xcc, 0x29, 0x0d, 0x31, 0x66, 0xc6, 0xec, 0x16, 0xc3, 0x23,
	0xbd, 0xd7, 0x96, 0xbb, 0xea, 0x2b, 0xfb, 0x9f, 0x5a, 0x9a, 0x9a, 0x7b, 0xae, 0x57, 0x7f, 0xce,
	0x01, 0x0c, 0x9b, 0x06, 0x01, 0x00, 0x26, 0xba, 0x0a, 0x61, 0x00, 0x9c, 0x0a, 0xab, 0x80, 0x87,
	0xab, 0x1d, 0x33, 0x9f, 0x77, 0x57, 0xbf, 0x6b, 0xf7, 0x17, 0x3e, 0x06, 0x18, 0xb6, 0x08, 0x02,
	0x20, 0x4c, 0xf4, 0x10, 0xc2, 0x20, 0xe4, 0x18, 0x84, 0x9b, 0xb9, 0x08, 0x10, 0x58, 0x46, 0xf3,
	0xf6, 0x18, 0x46, 0x0f, 0xeb, 0xd0, 0x05, 0x93, 0x6d, 0x88, 0x30, 0x04, 0xce, 0x4d, 0x84, 0xbf,
	0x13, 0xc1, 0x09, 0x7d, 0x47, 0x35, 0xdd, 0x8e, 0xaf, 0x38, 0x48, 0x05, 0x3d, 0x1e, 0xd1, 0x4e,
	0xf0, 0xe9, 0x0a, 0x7e, 0xf9, 0xa6, 0xef, 0x5f, 0x52, 0xca, 0x39, 0x12, 0xf7, 0xd8, 0x0a, 0xee,
	0xe2, 0x2c, 0xfb, 0x9b, 0xde, 0x93, 0x2f, 0x5e, 0x06, 0x48, 0xee, 0x72, 0xb9, 0xbd, 0x2c, 0xac,
	0xb5, 0xf4, 0x8e, 0x9f, 0xc1, 0xbd, 0x39, 0x9a, 0x76, 0xe8, 0x75, 0x5d, 0xe7, 0xfe, 0xcd, 0x71,
	0x47, 0x33, 0xec, 0xea, 0xbe, 0xf7, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x2b, 0x64, 0x65,
	0x82, 0x20, 0x00, 0x00,
}
