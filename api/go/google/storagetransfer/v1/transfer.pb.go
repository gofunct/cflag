// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/storagetransfer/v1/transfer.proto

package google_storagetransfer_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/go/google/api"
import _ "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "go.pedge.io/pb/go/google/protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request passed to GetGoogleServiceAccount.
type GetGoogleServiceAccountRequest struct {
	// The ID of the Google Cloud Platform Console project that the Google service
	// account is associated with.
	// Required.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
}

func (m *GetGoogleServiceAccountRequest) Reset()                    { *m = GetGoogleServiceAccountRequest{} }
func (m *GetGoogleServiceAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGoogleServiceAccountRequest) ProtoMessage()               {}
func (*GetGoogleServiceAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetGoogleServiceAccountRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

// Request passed to CreateTransferJob.
type CreateTransferJobRequest struct {
	// The job to create.
	// Required.
	TransferJob *TransferJob `protobuf:"bytes,1,opt,name=transfer_job,json=transferJob" json:"transfer_job,omitempty"`
}

func (m *CreateTransferJobRequest) Reset()                    { *m = CreateTransferJobRequest{} }
func (m *CreateTransferJobRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTransferJobRequest) ProtoMessage()               {}
func (*CreateTransferJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateTransferJobRequest) GetTransferJob() *TransferJob {
	if m != nil {
		return m.TransferJob
	}
	return nil
}

// Request passed to UpdateTransferJob.
type UpdateTransferJobRequest struct {
	// The name of job to update.
	// Required.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	// The ID of the Google Cloud Platform Console project that owns the job.
	// Required.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// The job to update. `transferJob` is expected to specify only three fields:
	// `description`, `transferSpec`, and `status`.  An UpdateTransferJobRequest
	// that specifies other fields will be rejected with an error
	// `INVALID_ARGUMENT`.
	// Required.
	TransferJob *TransferJob `protobuf:"bytes,3,opt,name=transfer_job,json=transferJob" json:"transfer_job,omitempty"`
	// The field mask of the fields in `transferJob` that are to be updated in
	// this request.  Fields in `transferJob` that can be updated are:
	// `description`, `transferSpec`, and `status`.  To update the `transferSpec`
	// of the job, a complete transfer specification has to be provided. An
	// incomplete specification which misses any required fields will be rejected
	// with the error `INVALID_ARGUMENT`.
	UpdateTransferJobFieldMask *google_protobuf2.FieldMask `protobuf:"bytes,4,opt,name=update_transfer_job_field_mask,json=updateTransferJobFieldMask" json:"update_transfer_job_field_mask,omitempty"`
}

func (m *UpdateTransferJobRequest) Reset()                    { *m = UpdateTransferJobRequest{} }
func (m *UpdateTransferJobRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTransferJobRequest) ProtoMessage()               {}
func (*UpdateTransferJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateTransferJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *UpdateTransferJobRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *UpdateTransferJobRequest) GetTransferJob() *TransferJob {
	if m != nil {
		return m.TransferJob
	}
	return nil
}

func (m *UpdateTransferJobRequest) GetUpdateTransferJobFieldMask() *google_protobuf2.FieldMask {
	if m != nil {
		return m.UpdateTransferJobFieldMask
	}
	return nil
}

// Request passed to GetTransferJob.
type GetTransferJobRequest struct {
	// The job to get.
	// Required.
	JobName string `protobuf:"bytes,1,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	// The ID of the Google Cloud Platform Console project that owns the job.
	// Required.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
}

func (m *GetTransferJobRequest) Reset()                    { *m = GetTransferJobRequest{} }
func (m *GetTransferJobRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTransferJobRequest) ProtoMessage()               {}
func (*GetTransferJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetTransferJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *GetTransferJobRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

// `project_id`, `job_names`, and `job_statuses` are query parameters that can
// be specified when listing transfer jobs.
type ListTransferJobsRequest struct {
	// A list of query parameters specified as JSON text in the form of
	// {"project_id":"my_project_id",
	// "job_names":["jobid1","jobid2",...],
	// "job_statuses":["status1","status2",...]}.
	// Since `job_names` and `job_statuses` support multiple values, their values
	// must be specified with array notation. `project_id` is required. `job_names`
	// and `job_statuses` are optional.  The valid values for `job_statuses` are
	// case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
	Filter string `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	// The list page size. The max allowed value is 256.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// The list page token.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListTransferJobsRequest) Reset()                    { *m = ListTransferJobsRequest{} }
func (m *ListTransferJobsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTransferJobsRequest) ProtoMessage()               {}
func (*ListTransferJobsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListTransferJobsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListTransferJobsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTransferJobsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response from ListTransferJobs.
type ListTransferJobsResponse struct {
	// A list of transfer jobs.
	TransferJobs []*TransferJob `protobuf:"bytes,1,rep,name=transfer_jobs,json=transferJobs" json:"transfer_jobs,omitempty"`
	// The list next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListTransferJobsResponse) Reset()                    { *m = ListTransferJobsResponse{} }
func (m *ListTransferJobsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTransferJobsResponse) ProtoMessage()               {}
func (*ListTransferJobsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListTransferJobsResponse) GetTransferJobs() []*TransferJob {
	if m != nil {
		return m.TransferJobs
	}
	return nil
}

func (m *ListTransferJobsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request passed to PauseTransferOperation.
type PauseTransferOperationRequest struct {
	// The name of the transfer operation.
	// Required.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *PauseTransferOperationRequest) Reset()                    { *m = PauseTransferOperationRequest{} }
func (m *PauseTransferOperationRequest) String() string            { return proto.CompactTextString(m) }
func (*PauseTransferOperationRequest) ProtoMessage()               {}
func (*PauseTransferOperationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PauseTransferOperationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request passed to ResumeTransferOperation.
type ResumeTransferOperationRequest struct {
	// The name of the transfer operation.
	// Required.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ResumeTransferOperationRequest) Reset()                    { *m = ResumeTransferOperationRequest{} }
func (m *ResumeTransferOperationRequest) String() string            { return proto.CompactTextString(m) }
func (*ResumeTransferOperationRequest) ProtoMessage()               {}
func (*ResumeTransferOperationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ResumeTransferOperationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*GetGoogleServiceAccountRequest)(nil), "google.storagetransfer.v1.GetGoogleServiceAccountRequest")
	proto.RegisterType((*CreateTransferJobRequest)(nil), "google.storagetransfer.v1.CreateTransferJobRequest")
	proto.RegisterType((*UpdateTransferJobRequest)(nil), "google.storagetransfer.v1.UpdateTransferJobRequest")
	proto.RegisterType((*GetTransferJobRequest)(nil), "google.storagetransfer.v1.GetTransferJobRequest")
	proto.RegisterType((*ListTransferJobsRequest)(nil), "google.storagetransfer.v1.ListTransferJobsRequest")
	proto.RegisterType((*ListTransferJobsResponse)(nil), "google.storagetransfer.v1.ListTransferJobsResponse")
	proto.RegisterType((*PauseTransferOperationRequest)(nil), "google.storagetransfer.v1.PauseTransferOperationRequest")
	proto.RegisterType((*ResumeTransferOperationRequest)(nil), "google.storagetransfer.v1.ResumeTransferOperationRequest")
}

func init() { proto.RegisterFile("google/storagetransfer/v1/transfer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 757 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0xc7, 0x35, 0xfd, 0xba, 0xed, 0x69, 0x7b, 0x6f, 0x3b, 0xd2, 0x4d, 0xdd, 0xf4, 0x36, 0x37,
	0x9a, 0x4a, 0xa1, 0x04, 0x64, 0x93, 0x84, 0x05, 0x54, 0x42, 0x88, 0x56, 0x50, 0x95, 0xcf, 0x92,
	0x96, 0xae, 0x2a, 0x2c, 0x27, 0x99, 0x44, 0x4e, 0x13, 0x8f, 0xf1, 0x8c, 0x2b, 0xda, 0xa8, 0x1b,
	0x5e, 0x00, 0x09, 0x84, 0x84, 0x84, 0x90, 0x58, 0xb3, 0xe7, 0x25, 0xd8, 0xf2, 0x0a, 0x3c, 0x04,
	0xac, 0x40, 0x1e, 0xdb, 0xa9, 0xeb, 0x24, 0x6e, 0x0b, 0xec, 0x3c, 0x33, 0xe7, 0xe3, 0x77, 0xce,
	0xc9, 0xff, 0x04, 0x96, 0x1b, 0x8c, 0x35, 0x5a, 0x54, 0xe3, 0x82, 0x39, 0x46, 0x83, 0x0a, 0xc7,
	0xb0, 0x78, 0x9d, 0x3a, 0xda, 0x7e, 0x41, 0x0b, 0xbf, 0x55, 0xdb, 0x61, 0x82, 0xe1, 0x79, 0xdf,
	0x52, 0x8d, 0x59, 0xaa, 0xfb, 0x85, 0xf4, 0x7f, 0x41, 0x10, 0xc3, 0x36, 0x35, 0xc3, 0xb2, 0x98,
	0x30, 0x84, 0xc9, 0x2c, 0xee, 0x3b, 0xa6, 0x17, 0x82, 0x57, 0x79, 0xaa, 0xb8, 0x75, 0x8d, 0xb6,
	0x6d, 0x71, 0x10, 0x3c, 0x66, 0xe3, 0x8f, 0x75, 0x93, 0xb6, 0x6a, 0x7a, 0xdb, 0xe0, 0x7b, 0x81,
	0x85, 0x7a, 0x3a, 0xa1, 0x2e, 0x0e, 0x6c, 0x1a, 0xa4, 0x23, 0x37, 0x21, 0xb3, 0x4e, 0xc5, 0xba,
	0x74, 0xda, 0xa2, 0xce, 0xbe, 0x59, 0xa5, 0xb7, 0xaa, 0x55, 0xe6, 0x5a, 0xa2, 0x4c, 0x9f, 0xb9,
	0x94, 0x0b, 0xbc, 0x08, 0x60, 0x3b, 0xac, 0x49, 0xab, 0x42, 0x37, 0x6b, 0x0a, 0xca, 0xa2, 0xe5,
	0x89, 0xf2, 0x44, 0x70, 0xb3, 0x51, 0x23, 0x14, 0x94, 0x35, 0x87, 0x1a, 0x82, 0x6e, 0x07, 0xe1,
	0xef, 0xb2, 0x4a, 0xe8, 0xba, 0x01, 0x53, 0xdd, 0xa4, 0x4d, 0x56, 0x91, 0xce, 0x93, 0xc5, 0x9c,
	0x3a, 0xb0, 0x37, 0x6a, 0x34, 0xc8, 0xa4, 0x38, 0x3e, 0x90, 0x1f, 0x08, 0x94, 0x27, 0x76, 0xad,
	0x7f, 0x9e, 0x79, 0x18, 0x6f, 0xb2, 0x8a, 0x6e, 0x19, 0x6d, 0x1a, 0x00, 0xfe, 0xd5, 0x64, 0x95,
	0x87, 0x46, 0x9b, 0xc6, 0xe8, 0x87, 0x62, 0xf4, 0x3d, 0x84, 0xc3, 0xbf, 0x4c, 0x88, 0x9f, 0x42,
	0xc6, 0x95, 0x80, 0x7a, 0x34, 0xa2, 0x7e, 0x3c, 0x21, 0x65, 0x44, 0x06, 0x0f, 0x47, 0xa4, 0x86,
	0x43, 0x54, 0xef, 0x78, 0x26, 0x0f, 0x0c, 0xbe, 0x57, 0x4e, 0xbb, 0xf1, 0x12, 0xbb, 0x6f, 0xe4,
	0x31, 0xfc, 0xbb, 0x4e, 0xc5, 0x9f, 0xac, 0x9e, 0xb4, 0x61, 0xee, 0xbe, 0xc9, 0xa3, 0x31, 0x79,
	0x18, 0x34, 0x05, 0x63, 0x75, 0xb3, 0x25, 0xa8, 0x13, 0x84, 0x0c, 0x4e, 0x78, 0x01, 0x26, 0x6c,
	0xa3, 0x41, 0x75, 0x6e, 0x1e, 0x52, 0x59, 0xd0, 0x68, 0x79, 0xdc, 0xbb, 0xd8, 0x32, 0x0f, 0xfd,
	0x74, 0xde, 0xa3, 0x60, 0x7b, 0xd4, 0x52, 0x46, 0x83, 0x74, 0x46, 0x83, 0x6e, 0x7b, 0x17, 0xe4,
	0x25, 0x02, 0xa5, 0x37, 0x1f, 0xb7, 0x99, 0xc5, 0x29, 0xbe, 0x07, 0xd3, 0xd1, 0xbe, 0x71, 0x05,
	0x65, 0x87, 0xcf, 0x31, 0x8a, 0xa9, 0xc8, 0x28, 0x38, 0xce, 0xc1, 0x3f, 0x16, 0x7d, 0x2e, 0xf4,
	0x08, 0x8d, 0x5f, 0xfc, 0xb4, 0x77, 0xbd, 0xd9, 0x25, 0x2a, 0xc1, 0xe2, 0xa6, 0xe1, 0xf2, 0x6e,
	0xc3, 0x1f, 0xd9, 0xd4, 0x91, 0x6a, 0x0c, 0xdb, 0x80, 0x61, 0x24, 0xd2, 0x57, 0xf9, 0x4d, 0xae,
	0x42, 0xa6, 0x4c, 0xb9, 0xdb, 0x3e, 0x97, 0x57, 0xf1, 0xfb, 0x38, 0xa4, 0xb6, 0xfc, 0x1a, 0x42,
	0xbf, 0x40, 0x6f, 0xf8, 0x13, 0x82, 0xb9, 0x01, 0x22, 0xc4, 0xd7, 0x13, 0xea, 0x4f, 0x16, 0x6e,
	0x5a, 0x4b, 0x72, 0xed, 0xe3, 0x47, 0xd4, 0x17, 0x5f, 0xbe, 0xbe, 0x1e, 0x5a, 0xc6, 0x39, 0x6f,
	0x5b, 0x34, 0xfa, 0x58, 0x70, 0xad, 0x73, 0xfc, 0x73, 0x3a, 0xc2, 0x6f, 0x11, 0xcc, 0xf6, 0x68,
	0x1f, 0x97, 0x12, 0xd2, 0x0e, 0xda, 0x14, 0xe9, 0x33, 0x8e, 0x99, 0xe4, 0x24, 0x62, 0x96, 0xcc,
	0x44, 0x17, 0x9a, 0x37, 0xf2, 0x95, 0x13, 0x3a, 0xc6, 0xef, 0x10, 0xcc, 0xf6, 0xac, 0x8b, 0x44,
	0xb4, 0x41, 0xcb, 0xe5, 0xcc, 0x68, 0x17, 0x25, 0xda, 0x52, 0x31, 0xe3, 0xa1, 0x75, 0x42, 0x45,
	0xde, 0x88, 0x42, 0x6a, 0xf9, 0xfc, 0xd1, 0x0a, 0xca, 0xe3, 0x57, 0x08, 0xfe, 0x3e, 0xa9, 0x65,
	0x7c, 0x25, 0x79, 0xce, 0xbf, 0xdf, 0x32, 0x7c, 0x0a, 0x17, 0x7e, 0x83, 0x60, 0x26, 0xae, 0x4e,
	0x5c, 0x4c, 0x48, 0x32, 0x60, 0x75, 0xa4, 0x4b, 0xe7, 0xf2, 0xf1, 0xe5, 0x4f, 0x14, 0x49, 0x89,
	0x71, 0xcf, 0x60, 0xf1, 0x7b, 0x04, 0xa9, 0xfe, 0x22, 0xc5, 0xd7, 0x12, 0x32, 0x25, 0xea, 0x3a,
	0x9d, 0xea, 0x59, 0xc2, 0xb7, 0xbd, 0xbf, 0x59, 0x52, 0x90, 0x18, 0x97, 0x88, 0x94, 0x40, 0xe7,
	0x44, 0xa3, 0xba, 0x31, 0xfc, 0x31, 0xda, 0x5e, 0x7c, 0x6f, 0x98, 0x1f, 0x10, 0xcc, 0x0d, 0xd8,
	0x07, 0x89, 0xea, 0x4d, 0xde, 0x21, 0x03, 0x09, 0x8b, 0x92, 0xf0, 0x32, 0xb9, 0x70, 0x2a, 0xa1,
	0x23, 0x13, 0xac, 0xa0, 0xfc, 0x6a, 0x07, 0x96, 0xaa, 0xac, 0x9d, 0xc0, 0x22, 0x73, 0xac, 0x4e,
	0x87, 0x30, 0x9b, 0xde, 0xf1, 0x1b, 0x42, 0x1f, 0x87, 0xfe, 0xf7, 0x17, 0x85, 0xba, 0xd6, 0x62,
	0x6e, 0x4d, 0x8d, 0xed, 0x2f, 0x75, 0xa7, 0xf0, 0x39, 0xb4, 0xd8, 0x95, 0x16, 0xbb, 0x31, 0x8b,
	0xdd, 0x9d, 0x42, 0x65, 0x4c, 0x06, 0x2f, 0xfd, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x21, 0x38,
	0x13, 0x3c, 0x09, 0x00, 0x00,
}
