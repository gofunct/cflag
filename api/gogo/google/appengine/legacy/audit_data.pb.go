// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/appengine/legacy/audit_data.proto

package google_appengine_legacy

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Admin Console legacy audit log.
type AuditData struct {
	// Text description of the admin event.
	// This is the "Event" column in Admin Console's Admin Logs.
	EventMessage string `protobuf:"bytes,1,opt,name=event_message,json=eventMessage,proto3" json:"event_message,omitempty"`
	// Arbitrary event data.
	// This is the "Result" column in Admin Console's Admin Logs.
	EventData map[string]string `protobuf:"bytes,2,rep,name=event_data,json=eventData" json:"event_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *AuditData) Reset()                    { *m = AuditData{} }
func (m *AuditData) String() string            { return proto.CompactTextString(m) }
func (*AuditData) ProtoMessage()               {}
func (*AuditData) Descriptor() ([]byte, []int) { return fileDescriptorAuditData, []int{0} }

func (m *AuditData) GetEventMessage() string {
	if m != nil {
		return m.EventMessage
	}
	return ""
}

func (m *AuditData) GetEventData() map[string]string {
	if m != nil {
		return m.EventData
	}
	return nil
}

func init() {
	proto.RegisterType((*AuditData)(nil), "google.appengine.legacy.AuditData")
}

func init() { proto.RegisterFile("google/appengine/legacy/audit_data.proto", fileDescriptorAuditData) }

var fileDescriptorAuditData = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x48, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0x28, 0x48, 0xcd, 0x4b, 0xcf, 0xcc, 0x4b, 0xd5, 0xcf, 0x49, 0x4d,
	0x4f, 0x4c, 0xae, 0xd4, 0x4f, 0x2c, 0x4d, 0xc9, 0x2c, 0x89, 0x4f, 0x49, 0x2c, 0x49, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x87, 0xa8, 0xd4, 0x83, 0xab, 0xd4, 0x83, 0xa8, 0x54, 0x3a,
	0xc0, 0xc8, 0xc5, 0xe9, 0x08, 0x52, 0xed, 0x92, 0x58, 0x92, 0x28, 0xa4, 0xcc, 0xc5, 0x9b, 0x5a,
	0x96, 0x9a, 0x57, 0x12, 0x9f, 0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8,
	0xc1, 0x19, 0xc4, 0x03, 0x16, 0xf4, 0x85, 0x88, 0x09, 0x05, 0x70, 0x71, 0x41, 0x14, 0x81, 0xcc,
	0x97, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x36, 0x32, 0xd4, 0xc3, 0x61, 0x81, 0x1e, 0xdc, 0x70, 0x3d,
	0x57, 0x90, 0x26, 0x10, 0xcb, 0x35, 0xaf, 0xa4, 0xa8, 0x32, 0x88, 0x33, 0x15, 0xc6, 0x97, 0xb2,
	0xe1, 0xe2, 0x43, 0x95, 0x14, 0x12, 0xe0, 0x62, 0xce, 0x4e, 0xad, 0x84, 0x5a, 0x0f, 0x62, 0x0a,
	0x89, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30, 0x81, 0xc5, 0x20, 0x1c, 0x2b, 0x26,
	0x0b, 0x46, 0x27, 0x7d, 0x2e, 0xe9, 0xe4, 0xfc, 0x5c, 0x5c, 0x0e, 0x70, 0xe2, 0x83, 0xbb, 0x20,
	0x00, 0x14, 0x14, 0x01, 0x8c, 0x49, 0x6c, 0xe0, 0x30, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xe6, 0x1d, 0x61, 0xe2, 0x3f, 0x01, 0x00, 0x00,
}
