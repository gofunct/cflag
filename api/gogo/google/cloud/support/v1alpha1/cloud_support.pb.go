// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: google/cloud/support/v1alpha1/cloud_support.proto

package google_cloud_support_v1alpha1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/gogo/google/api"
import google_cloud_support_common "go.pedge.io/pb/gogo/google/cloud/support"
import _ "github.com/gogo/protobuf/types"
import google_protobuf3 "go.pedge.io/pb/gogo/google/protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// The request message for `GetSupportAccount`.
type GetSupportAccountRequest struct {
	// The resource name of the support accounts. For example:
	// `supportAccounts/accountA`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetSupportAccountRequest) Reset()         { *m = GetSupportAccountRequest{} }
func (m *GetSupportAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetSupportAccountRequest) ProtoMessage()    {}
func (*GetSupportAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorCloudSupport, []int{0}
}

func (m *GetSupportAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The request message for `ListSupportAccount`.
type ListSupportAccountsRequest struct {
	// The filter applied to search results. It only supports filtering a support
	// account list by a cloud_resource. For example, to filter results by support
	// accounts associated with an Organization, its value should be:
	// "cloud_resource:organizations/<organization_id>"
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Maximum number of accounts fetched with each request.
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A token identifying the page of results to return. If unspecified, the
	// first page is retrieved.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListSupportAccountsRequest) Reset()         { *m = ListSupportAccountsRequest{} }
func (m *ListSupportAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSupportAccountsRequest) ProtoMessage()    {}
func (*ListSupportAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorCloudSupport, []int{1}
}

func (m *ListSupportAccountsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListSupportAccountsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListSupportAccountsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response message for `ListSupportAccount`.
type ListSupportAccountsResponse struct {
	// A list of support accounts.
	Accounts []*google_cloud_support_common.SupportAccount `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	// A token to retrieve the next page of results. This should be passed on in
	// `page_token` field of `ListSupportAccountRequest` for next request. If
	// unspecified, there are no more results to retrieve.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListSupportAccountsResponse) Reset()         { *m = ListSupportAccountsResponse{} }
func (m *ListSupportAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSupportAccountsResponse) ProtoMessage()    {}
func (*ListSupportAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorCloudSupport, []int{2}
}

func (m *ListSupportAccountsResponse) GetAccounts() []*google_cloud_support_common.SupportAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListSupportAccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The request message for `GetCase` method.
type GetCaseRequest struct {
	// Name of case resource requested.
	// For example: "supportAccounts/accountA/cases/123"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *GetCaseRequest) Reset()                    { *m = GetCaseRequest{} }
func (m *GetCaseRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCaseRequest) ProtoMessage()               {}
func (*GetCaseRequest) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{3} }

func (m *GetCaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The request message for `ListCase` method.
type ListCasesRequest struct {
	// Name of the account resource for which cases are requested. For example:
	// "supportAccounts/accountA"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The filter applied to the search results. Currently it only accepts "OPEN"
	// or "CLOSED" strings, filtering out cases that are open or resolved.
	Filter string `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	// Maximum number of cases fetched with each request.
	PageSize int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A token identifying the page of results to return. If unspecified, the
	// first page is retrieved.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (m *ListCasesRequest) Reset()                    { *m = ListCasesRequest{} }
func (m *ListCasesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCasesRequest) ProtoMessage()               {}
func (*ListCasesRequest) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{4} }

func (m *ListCasesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListCasesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListCasesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCasesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response message for `ListCase` method.
type ListCasesResponse struct {
	// A list of cases.
	Cases []*google_cloud_support_common.Case `protobuf:"bytes,1,rep,name=cases" json:"cases,omitempty"`
	// A token to retrieve the next page of results. This should be passed on in
	// `page_token` field of `ListCaseRequest` for next request. If unspecified,
	// there are no more results to retrieve.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (m *ListCasesResponse) Reset()                    { *m = ListCasesResponse{} }
func (m *ListCasesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListCasesResponse) ProtoMessage()               {}
func (*ListCasesResponse) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{5} }

func (m *ListCasesResponse) GetCases() []*google_cloud_support_common.Case {
	if m != nil {
		return m.Cases
	}
	return nil
}

func (m *ListCasesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The request message for `ListComments` method.
type ListCommentsRequest struct {
	// The resource name of case for which comments should be listed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *ListCommentsRequest) Reset()                    { *m = ListCommentsRequest{} }
func (m *ListCommentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCommentsRequest) ProtoMessage()               {}
func (*ListCommentsRequest) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{6} }

func (m *ListCommentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message for `ListComments` method.
type ListCommentsResponse struct {
	// A list of comments.
	Comments []*google_cloud_support_common.Comment `protobuf:"bytes,1,rep,name=comments" json:"comments,omitempty"`
}

func (m *ListCommentsResponse) Reset()                    { *m = ListCommentsResponse{} }
func (m *ListCommentsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListCommentsResponse) ProtoMessage()               {}
func (*ListCommentsResponse) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{7} }

func (m *ListCommentsResponse) GetComments() []*google_cloud_support_common.Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

// The request message for `CreateCase` method.
type CreateCaseRequest struct {
	// The resource name for `SupportAccount` under which this case is created.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The case resource to create.
	Case *google_cloud_support_common.Case `protobuf:"bytes,2,opt,name=case" json:"case,omitempty"`
}

func (m *CreateCaseRequest) Reset()                    { *m = CreateCaseRequest{} }
func (m *CreateCaseRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateCaseRequest) ProtoMessage()               {}
func (*CreateCaseRequest) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{8} }

func (m *CreateCaseRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateCaseRequest) GetCase() *google_cloud_support_common.Case {
	if m != nil {
		return m.Case
	}
	return nil
}

// The request message for `UpdateCase` method.
type UpdateCaseRequest struct {
	// The case resource to update.
	Case *google_cloud_support_common.Case `protobuf:"bytes,1,opt,name=case" json:"case,omitempty"`
	// A field that represents attributes of a Case object that should be updated
	// as part of this request.
	UpdateMask *google_protobuf3.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask" json:"update_mask,omitempty"`
}

func (m *UpdateCaseRequest) Reset()                    { *m = UpdateCaseRequest{} }
func (m *UpdateCaseRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateCaseRequest) ProtoMessage()               {}
func (*UpdateCaseRequest) Descriptor() ([]byte, []int) { return fileDescriptorCloudSupport, []int{9} }

func (m *UpdateCaseRequest) GetCase() *google_cloud_support_common.Case {
	if m != nil {
		return m.Case
	}
	return nil
}

func (m *UpdateCaseRequest) GetUpdateMask() *google_protobuf3.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// The request message for `CreateComment` method.
type CreateCommentRequest struct {
	// The resource name of case to which this comment should be added.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The `Comment` to be added to this case.
	Comment *google_cloud_support_common.Comment `protobuf:"bytes,2,opt,name=comment" json:"comment,omitempty"`
}

func (m *CreateCommentRequest) Reset()         { *m = CreateCommentRequest{} }
func (m *CreateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommentRequest) ProtoMessage()    {}
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorCloudSupport, []int{10}
}

func (m *CreateCommentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCommentRequest) GetComment() *google_cloud_support_common.Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

// The request message for `GetIssueTaxonomy` method.
type GetIssueTaxonomyRequest struct {
}

func (m *GetIssueTaxonomyRequest) Reset()         { *m = GetIssueTaxonomyRequest{} }
func (m *GetIssueTaxonomyRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssueTaxonomyRequest) ProtoMessage()    {}
func (*GetIssueTaxonomyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorCloudSupport, []int{11}
}

func init() {
	proto.RegisterType((*GetSupportAccountRequest)(nil), "google.cloud.support.v1alpha1.GetSupportAccountRequest")
	proto.RegisterType((*ListSupportAccountsRequest)(nil), "google.cloud.support.v1alpha1.ListSupportAccountsRequest")
	proto.RegisterType((*ListSupportAccountsResponse)(nil), "google.cloud.support.v1alpha1.ListSupportAccountsResponse")
	proto.RegisterType((*GetCaseRequest)(nil), "google.cloud.support.v1alpha1.GetCaseRequest")
	proto.RegisterType((*ListCasesRequest)(nil), "google.cloud.support.v1alpha1.ListCasesRequest")
	proto.RegisterType((*ListCasesResponse)(nil), "google.cloud.support.v1alpha1.ListCasesResponse")
	proto.RegisterType((*ListCommentsRequest)(nil), "google.cloud.support.v1alpha1.ListCommentsRequest")
	proto.RegisterType((*ListCommentsResponse)(nil), "google.cloud.support.v1alpha1.ListCommentsResponse")
	proto.RegisterType((*CreateCaseRequest)(nil), "google.cloud.support.v1alpha1.CreateCaseRequest")
	proto.RegisterType((*UpdateCaseRequest)(nil), "google.cloud.support.v1alpha1.UpdateCaseRequest")
	proto.RegisterType((*CreateCommentRequest)(nil), "google.cloud.support.v1alpha1.CreateCommentRequest")
	proto.RegisterType((*GetIssueTaxonomyRequest)(nil), "google.cloud.support.v1alpha1.GetIssueTaxonomyRequest")
}

func init() {
	proto.RegisterFile("google/cloud/support/v1alpha1/cloud_support.proto", fileDescriptorCloudSupport)
}

var fileDescriptorCloudSupport = []byte{
	// 831 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcf, 0x4f, 0x13, 0x41,
	0x14, 0xce, 0xb4, 0xc8, 0x8f, 0x07, 0x28, 0x1d, 0x09, 0x96, 0x2d, 0x24, 0xed, 0x84, 0x98, 0x5a,
	0x75, 0x17, 0xda, 0x00, 0x5a, 0x02, 0x51, 0x30, 0x36, 0x26, 0x9a, 0x90, 0x82, 0x89, 0xb7, 0x66,
	0x29, 0x43, 0xad, 0x74, 0x77, 0xd6, 0xee, 0xd4, 0x00, 0xc6, 0x8b, 0x17, 0x6f, 0x7a, 0xf0, 0xa6,
	0x17, 0x2e, 0x9e, 0xf5, 0xe0, 0x7f, 0xe2, 0xbf, 0xa0, 0xff, 0x87, 0xd9, 0xd9, 0xd9, 0x76, 0xbb,
	0xb4, 0xbb, 0x0b, 0xb7, 0xdd, 0x37, 0xef, 0x7b, 0xef, 0x9b, 0x6f, 0xde, 0x7c, 0x03, 0x2b, 0x0d,
	0xc6, 0x1a, 0x2d, 0xaa, 0xd5, 0x5b, 0xac, 0x73, 0xa8, 0xd9, 0x1d, 0xcb, 0x62, 0x6d, 0xae, 0xbd,
	0x5b, 0xd1, 0x5b, 0xd6, 0x6b, 0x7d, 0xc5, 0x0d, 0xd7, 0x64, 0x58, 0xb5, 0xda, 0x8c, 0x33, 0xbc,
	0xe8, 0x42, 0x54, 0xb1, 0xa6, 0x7a, 0x6b, 0x1e, 0x44, 0x59, 0x90, 0x15, 0x75, 0xab, 0xa9, 0xe9,
	0xa6, 0xc9, 0xb8, 0xce, 0x9b, 0xcc, 0xb4, 0x5d, 0xb0, 0x92, 0x1b, 0xd8, 0xaf, 0xce, 0x0c, 0x83,
	0x99, 0x32, 0x25, 0x23, 0x53, 0xc4, 0xdf, 0x41, 0xe7, 0x48, 0xa3, 0x86, 0xc5, 0x4f, 0xe5, 0x62,
	0x36, 0xb8, 0x78, 0xd4, 0xa4, 0xad, 0xc3, 0x9a, 0xa1, 0xdb, 0xc7, 0x6e, 0x06, 0x51, 0x21, 0x5d,
	0xa1, 0x7c, 0xcf, 0xad, 0xfc, 0xb8, 0x5e, 0x67, 0x1d, 0x93, 0x57, 0xe9, 0xdb, 0x0e, 0xb5, 0x39,
	0xc6, 0x30, 0x62, 0xea, 0x06, 0x4d, 0xa3, 0x2c, 0xca, 0x4f, 0x54, 0xc5, 0x37, 0xb1, 0x40, 0x79,
	0xde, 0xb4, 0x03, 0x00, 0xdb, 0x43, 0xcc, 0xc1, 0xe8, 0x51, 0xb3, 0xc5, 0x69, 0x5b, 0x62, 0xe4,
	0x1f, 0xce, 0xc0, 0x84, 0xa5, 0x37, 0x68, 0xcd, 0x6e, 0x9e, 0xd1, 0x74, 0x22, 0x8b, 0xf2, 0xc9,
	0xea, 0xb8, 0x13, 0xd8, 0x6b, 0x9e, 0x51, 0xbc, 0x08, 0x20, 0x16, 0x39, 0x3b, 0xa6, 0x66, 0x3a,
	0x29, 0x80, 0x22, 0x7d, 0xdf, 0x09, 0x90, 0xcf, 0x08, 0x32, 0x03, 0x5b, 0xda, 0x16, 0x33, 0x6d,
	0x8a, 0x2b, 0x30, 0xae, 0xcb, 0x58, 0x1a, 0x65, 0x93, 0xf9, 0xc9, 0xe2, 0x5d, 0x75, 0xa0, 0xe6,
	0x52, 0xb6, 0xc0, 0x5e, 0xbb, 0x60, 0x7c, 0x1b, 0x6e, 0x98, 0xf4, 0x84, 0xd7, 0x7c, 0x64, 0x12,
	0x82, 0xcc, 0xb4, 0x13, 0xde, 0xed, 0x12, 0x5a, 0x82, 0xeb, 0x15, 0xca, 0x77, 0x74, 0x9b, 0x86,
	0x09, 0x75, 0x06, 0x33, 0x0e, 0x6b, 0x27, 0xcd, 0x0e, 0xc9, 0xf3, 0x49, 0x96, 0x18, 0x2e, 0x59,
	0x32, 0x54, 0xb2, 0x91, 0xa0, 0x64, 0x1c, 0x52, 0xbe, 0xde, 0x52, 0xa7, 0x75, 0xb8, 0x56, 0x77,
	0x02, 0x52, 0xa4, 0x5c, 0xa8, 0x48, 0x62, 0x77, 0x6e, 0x7e, 0x6c, 0x5d, 0xee, 0xc0, 0x4d, 0xd1,
	0x95, 0x19, 0x06, 0xf5, 0xcd, 0xc4, 0x20, 0x71, 0x5e, 0xc1, 0x6c, 0x7f, 0xaa, 0xe4, 0xf8, 0x08,
	0xc6, 0xeb, 0x32, 0x26, 0x69, 0x2e, 0x85, 0xd3, 0x74, 0x93, 0xab, 0x5d, 0x14, 0x39, 0x80, 0xd4,
	0x4e, 0x9b, 0xea, 0x9c, 0xfa, 0xcf, 0x67, 0x0e, 0x46, 0x2d, 0xbd, 0x4d, 0x4d, 0xee, 0x8d, 0xa5,
	0xfb, 0x87, 0x57, 0x61, 0xc4, 0xd9, 0xa2, 0xd8, 0x4e, 0x2c, 0x45, 0x44, 0x3a, 0xf9, 0x84, 0x20,
	0xf5, 0xd2, 0x3a, 0x0c, 0x34, 0xf1, 0x8a, 0xa1, 0x4b, 0x15, 0xc3, 0x1b, 0x30, 0xd9, 0x11, 0xb5,
	0xc4, 0xad, 0x94, 0x54, 0x14, 0x0f, 0xed, 0x5d, 0x5c, 0xf5, 0xa9, 0x73, 0x71, 0x5f, 0xe8, 0xf6,
	0x71, 0x15, 0xdc, 0x74, 0xe7, 0x9b, 0xbc, 0x81, 0x59, 0xb9, 0x5b, 0x29, 0x44, 0xc8, 0xa0, 0x6d,
	0xc1, 0x98, 0x54, 0x49, 0x36, 0x89, 0x27, 0xad, 0x07, 0x22, 0xf3, 0x70, 0xab, 0x42, 0xf9, 0x33,
	0xdb, 0xee, 0xd0, 0x7d, 0xfd, 0x84, 0x99, 0xcc, 0x38, 0x95, 0xed, 0x8a, 0xff, 0x26, 0x61, 0x6a,
	0xc7, 0x29, 0x22, 0xef, 0x16, 0xfe, 0x81, 0x20, 0x75, 0xc1, 0x56, 0xf0, 0xba, 0x1a, 0xea, 0x85,
	0xea, 0x30, 0x23, 0x52, 0x2e, 0x73, 0xa1, 0x49, 0xe1, 0xe3, 0x9f, 0xbf, 0x5f, 0x13, 0x4b, 0x98,
	0xf4, 0x7c, 0xf9, 0xbd, 0x23, 0xc0, 0xa6, 0xdd, 0x6f, 0x20, 0x5a, 0xe1, 0x03, 0xfe, 0x89, 0xdc,
	0x99, 0x0d, 0x78, 0x0b, 0x7e, 0x18, 0xc1, 0x74, 0xb8, 0x05, 0x2a, 0xe5, 0xab, 0x40, 0xdd, 0xf1,
	0x27, 0x39, 0x41, 0x3d, 0x83, 0xe7, 0x7b, 0xd4, 0x03, 0xa4, 0xf1, 0x17, 0x04, 0x63, 0xd2, 0x7d,
	0xf0, 0xfd, 0x68, 0x3d, 0x7d, 0x03, 0xaa, 0x44, 0x8f, 0x24, 0x29, 0x0a, 0x02, 0xf7, 0x70, 0x21,
	0x52, 0x3b, 0x4d, 0x78, 0x83, 0xa3, 0xe1, 0x39, 0x82, 0x89, 0xae, 0xdb, 0x60, 0x2d, 0xc6, 0xf6,
	0xfd, 0x9e, 0xa8, 0x2c, 0xc7, 0x07, 0x48, 0x95, 0x96, 0x05, 0xc9, 0x02, 0xce, 0x47, 0x1f, 0xb0,
	0xcb, 0x12, 0xff, 0x46, 0x30, 0xe5, 0xf7, 0x1b, 0x5c, 0x8c, 0xd3, 0xb4, 0xdf, 0xc7, 0x94, 0xd2,
	0xa5, 0x30, 0x92, 0xeb, 0x86, 0xe0, 0xba, 0x8a, 0x4b, 0xf1, 0x05, 0xd5, 0x3c, 0x2f, 0xc3, 0xdf,
	0x11, 0x40, 0xcf, 0xcc, 0x70, 0x94, 0x52, 0x17, 0x7c, 0x2f, 0xce, 0x89, 0x3f, 0x10, 0x04, 0x8b,
	0xc4, 0x7f, 0xe2, 0xae, 0x3b, 0x0e, 0x95, 0xb3, 0xec, 0x1a, 0xd7, 0x39, 0x02, 0xe8, 0xb9, 0x60,
	0x24, 0xbb, 0x0b, 0x86, 0x19, 0x87, 0xdd, 0xa6, 0x60, 0xb7, 0x5e, 0xd4, 0x7c, 0xec, 0x9c, 0xe6,
	0x6a, 0x84, 0x86, 0x92, 0xe2, 0x2f, 0x04, 0xd3, 0x7d, 0xfe, 0x88, 0x4b, 0xf1, 0x34, 0xec, 0x73,
	0x53, 0x25, 0x96, 0x51, 0x92, 0x27, 0x82, 0xeb, 0x16, 0xb9, 0xca, 0x51, 0x97, 0x3d, 0x97, 0xc5,
	0xdf, 0x10, 0xcc, 0x04, 0x6d, 0x16, 0xaf, 0x45, 0x5f, 0xf4, 0x41, 0xbe, 0xac, 0x14, 0x42, 0x89,
	0xf7, 0x41, 0x08, 0x11, 0xf4, 0x17, 0xb0, 0xd2, 0xa5, 0x5f, 0x6e, 0x04, 0xca, 0x6e, 0xaf, 0x41,
	0xae, 0xce, 0x8c, 0x70, 0x32, 0xdb, 0x29, 0xff, 0x4b, 0xb0, 0x2b, 0xde, 0xaf, 0x51, 0xf1, 0x8c,
	0x95, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xc8, 0xb1, 0xb6, 0x3f, 0x0b, 0x00, 0x00,
}
