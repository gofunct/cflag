// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

package google_cloud_runtimeconfig_v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/go/google/api"
import _ "go.pedge.io/pb/go/google/longrunning"
import _ "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Request for the `ListConfigs()` method.
type ListConfigsRequest struct {
	// The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
	// for this request, in the format `projects/[PROJECT_ID]`.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Specifies the number of results to return per page. If there are fewer
	// elements than the specified number, returns all elements.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Specifies a page token to use. Set `pageToken` to a `nextPageToken`
	// returned by a previous list request to get the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListConfigsRequest) Reset()                    { *m = ListConfigsRequest{} }
func (m *ListConfigsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListConfigsRequest) ProtoMessage()               {}
func (*ListConfigsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListConfigsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListConfigsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListConfigsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// `ListConfigs()` returns the following response. The order of returned
// objects is arbitrary; that is, it is not ordered in any particular way.
type ListConfigsResponse struct {
	// A list of the configurations in the project. The order of returned
	// objects is arbitrary; that is, it is not ordered in any particular way.
	Configs []*RuntimeConfig `protobuf:"bytes,1,rep,name=configs" json:"configs,omitempty"`
	// This token allows you to get the next page of results for list requests.
	// If the number of results is larger than `pageSize`, use the `nextPageToken`
	// as a value for the query parameter `pageToken` in the next list request.
	// Subsequent list requests will have their own `nextPageToken` to continue
	// paging through the results
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListConfigsResponse) Reset()                    { *m = ListConfigsResponse{} }
func (m *ListConfigsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListConfigsResponse) ProtoMessage()               {}
func (*ListConfigsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ListConfigsResponse) GetConfigs() []*RuntimeConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *ListConfigsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Gets a RuntimeConfig resource.
type GetConfigRequest struct {
	// The name of the RuntimeConfig resource to retrieve, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetConfigRequest) Reset()                    { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()               {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetConfigRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Creates a RuntimeConfig resource.
type CreateConfigRequest struct {
	// The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
	// for this request, in the format `projects/[PROJECT_ID]`.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// The RuntimeConfig to create.
	Config *RuntimeConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	// An optional but recommended unique `request_id`. If the server
	// receives two `create()` requests  with the same
	// `request_id`, then the second request will be ignored and the
	// first resource created and stored in the backend is returned.
	// Empty `request_id` fields are ignored.
	//
	// It is responsibility of the client to ensure uniqueness of the
	// `request_id` strings.
	//
	// `request_id` strings are limited to 64 characters.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *CreateConfigRequest) Reset()                    { *m = CreateConfigRequest{} }
func (m *CreateConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateConfigRequest) ProtoMessage()               {}
func (*CreateConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateConfigRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateConfigRequest) GetConfig() *RuntimeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *CreateConfigRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// Request message for `UpdateConfig()` method.
type UpdateConfigRequest struct {
	// The name of the RuntimeConfig resource to update, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The config resource to update.
	Config *RuntimeConfig `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
}

func (m *UpdateConfigRequest) Reset()                    { *m = UpdateConfigRequest{} }
func (m *UpdateConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateConfigRequest) ProtoMessage()               {}
func (*UpdateConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *UpdateConfigRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateConfigRequest) GetConfig() *RuntimeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// Request for the `DeleteConfig()` method.
type DeleteConfigRequest struct {
	// The RuntimeConfig resource to delete, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteConfigRequest) Reset()                    { *m = DeleteConfigRequest{} }
func (m *DeleteConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteConfigRequest) ProtoMessage()               {}
func (*DeleteConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *DeleteConfigRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for the `ListVariables()` method.
type ListVariablesRequest struct {
	// The path to the RuntimeConfig resource for which you want to list variables.
	// The configuration must exist beforehand; the path must by in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Filters variables by matching the specified filter. For example:
	//
	// `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
	Filter string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	// Specifies the number of results to return per page. If there are fewer
	// elements than the specified number, returns all elements.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Specifies a page token to use. Set `pageToken` to a `nextPageToken`
	// returned by a previous list request to get the next page of results.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
	// The flag indicates whether the user wants to return values of variables.
	// If true, then only those variables that user has IAM GetVariable permission
	// will be returned along with their values.
	ReturnValues bool `protobuf:"varint,5,opt,name=return_values,json=returnValues" json:"return_values,omitempty"`
}

func (m *ListVariablesRequest) Reset()                    { *m = ListVariablesRequest{} }
func (m *ListVariablesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVariablesRequest) ProtoMessage()               {}
func (*ListVariablesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ListVariablesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListVariablesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListVariablesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListVariablesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListVariablesRequest) GetReturnValues() bool {
	if m != nil {
		return m.ReturnValues
	}
	return false
}

// Response for the `ListVariables()` method.
type ListVariablesResponse struct {
	// A list of variables and their values. The order of returned variable
	// objects is arbitrary.
	Variables []*Variable `protobuf:"bytes,1,rep,name=variables" json:"variables,omitempty"`
	// This token allows you to get the next page of results for list requests.
	// If the number of results is larger than `pageSize`, use the `nextPageToken`
	// as a value for the query parameter `pageToken` in the next list request.
	// Subsequent list requests will have their own `nextPageToken` to continue
	// paging through the results
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListVariablesResponse) Reset()                    { *m = ListVariablesResponse{} }
func (m *ListVariablesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListVariablesResponse) ProtoMessage()               {}
func (*ListVariablesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ListVariablesResponse) GetVariables() []*Variable {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *ListVariablesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the `WatchVariable()` method.
type WatchVariableRequest struct {
	// The name of the variable to watch, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// If specified, checks the current timestamp of the variable and if the
	// current timestamp is newer than `newerThan` timestamp, the method returns
	// immediately.
	//
	// If not specified or the variable has an older timestamp, the watcher waits
	// for a the value to change before returning.
	NewerThan *google_protobuf2.Timestamp `protobuf:"bytes,4,opt,name=newer_than,json=newerThan" json:"newer_than,omitempty"`
}

func (m *WatchVariableRequest) Reset()                    { *m = WatchVariableRequest{} }
func (m *WatchVariableRequest) String() string            { return proto.CompactTextString(m) }
func (*WatchVariableRequest) ProtoMessage()               {}
func (*WatchVariableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *WatchVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WatchVariableRequest) GetNewerThan() *google_protobuf2.Timestamp {
	if m != nil {
		return m.NewerThan
	}
	return nil
}

// Request for the `GetVariable()` method.
type GetVariableRequest struct {
	// The name of the variable to return, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIBLE_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetVariableRequest) Reset()                    { *m = GetVariableRequest{} }
func (m *GetVariableRequest) String() string            { return proto.CompactTextString(m) }
func (*GetVariableRequest) ProtoMessage()               {}
func (*GetVariableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *GetVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for the `CreateVariable()` method.
type CreateVariableRequest struct {
	// The path to the RutimeConfig resource that this variable should belong to.
	// The configuration must exist beforehand; the path must by in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// The variable to create.
	Variable *Variable `protobuf:"bytes,2,opt,name=variable" json:"variable,omitempty"`
	// An optional but recommended unique `request_id`. If the server
	// receives two `create()` requests  with the same
	// `request_id`, then the second request will be ignored and the
	// first resource created and stored in the backend is returned.
	// Empty `request_id` fields are ignored.
	//
	// It is responsibility of the client to ensure uniqueness of the
	// `request_id` strings.
	//
	// `request_id` strings are limited to 64 characters.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *CreateVariableRequest) Reset()                    { *m = CreateVariableRequest{} }
func (m *CreateVariableRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateVariableRequest) ProtoMessage()               {}
func (*CreateVariableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *CreateVariableRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateVariableRequest) GetVariable() *Variable {
	if m != nil {
		return m.Variable
	}
	return nil
}

func (m *CreateVariableRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// Request for the `UpdateVariable()` method.
type UpdateVariableRequest struct {
	// The name of the variable to update, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The variable to update.
	Variable *Variable `protobuf:"bytes,2,opt,name=variable" json:"variable,omitempty"`
}

func (m *UpdateVariableRequest) Reset()                    { *m = UpdateVariableRequest{} }
func (m *UpdateVariableRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateVariableRequest) ProtoMessage()               {}
func (*UpdateVariableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *UpdateVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateVariableRequest) GetVariable() *Variable {
	if m != nil {
		return m.Variable
	}
	return nil
}

// Request for the `DeleteVariable()` method.
type DeleteVariableRequest struct {
	// The name of the variable to delete, in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Set to `true` to recursively delete multiple variables with the same
	// prefix.
	Recursive bool `protobuf:"varint,2,opt,name=recursive" json:"recursive,omitempty"`
}

func (m *DeleteVariableRequest) Reset()                    { *m = DeleteVariableRequest{} }
func (m *DeleteVariableRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteVariableRequest) ProtoMessage()               {}
func (*DeleteVariableRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *DeleteVariableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteVariableRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

// Request for the `ListWaiters()` method.
type ListWaitersRequest struct {
	// The path to the configuration for which you want to get a list of waiters.
	// The configuration must exist beforehand; the path must by in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Specifies the number of results to return per page. If there are fewer
	// elements than the specified number, returns all elements.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	// Specifies a page token to use. Set `pageToken` to a `nextPageToken`
	// returned by a previous list request to get the next page of results.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken" json:"page_token,omitempty"`
}

func (m *ListWaitersRequest) Reset()                    { *m = ListWaitersRequest{} }
func (m *ListWaitersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListWaitersRequest) ProtoMessage()               {}
func (*ListWaitersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ListWaitersRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListWaitersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWaitersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the `ListWaiters()` method.
// Order of returned waiter objects is arbitrary.
type ListWaitersResponse struct {
	// Found waiters in the project.
	Waiters []*Waiter `protobuf:"bytes,1,rep,name=waiters" json:"waiters,omitempty"`
	// This token allows you to get the next page of results for list requests.
	// If the number of results is larger than `pageSize`, use the `nextPageToken`
	// as a value for the query parameter `pageToken` in the next list request.
	// Subsequent list requests will have their own `nextPageToken` to continue
	// paging through the results
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken" json:"next_page_token,omitempty"`
}

func (m *ListWaitersResponse) Reset()                    { *m = ListWaitersResponse{} }
func (m *ListWaitersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListWaitersResponse) ProtoMessage()               {}
func (*ListWaitersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ListWaitersResponse) GetWaiters() []*Waiter {
	if m != nil {
		return m.Waiters
	}
	return nil
}

func (m *ListWaitersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the `GetWaiter()` method.
type GetWaiterRequest struct {
	// The fully-qualified name of the Waiter resource object to retrieve, in the
	// format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetWaiterRequest) Reset()                    { *m = GetWaiterRequest{} }
func (m *GetWaiterRequest) String() string            { return proto.CompactTextString(m) }
func (*GetWaiterRequest) ProtoMessage()               {}
func (*GetWaiterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *GetWaiterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for `CreateWaiter()` method.
type CreateWaiterRequest struct {
	// The path to the configuration that will own the waiter.
	// The configuration must exist beforehand; the path must by in the format:
	//
	// `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// The Waiter resource to create.
	Waiter *Waiter `protobuf:"bytes,2,opt,name=waiter" json:"waiter,omitempty"`
	// An optional but recommended unique `request_id`. If the server
	// receives two `create()` requests  with the same
	// `request_id`, then the second request will be ignored and the
	// first resource created and stored in the backend is returned.
	// Empty `request_id` fields are ignored.
	//
	// It is responsibility of the client to ensure uniqueness of the
	// `request_id` strings.
	//
	// `request_id` strings are limited to 64 characters.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *CreateWaiterRequest) Reset()                    { *m = CreateWaiterRequest{} }
func (m *CreateWaiterRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWaiterRequest) ProtoMessage()               {}
func (*CreateWaiterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *CreateWaiterRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateWaiterRequest) GetWaiter() *Waiter {
	if m != nil {
		return m.Waiter
	}
	return nil
}

func (m *CreateWaiterRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

// Request for the `DeleteWaiter()` method.
type DeleteWaiterRequest struct {
	// The Waiter resource to delete, in the format:
	//
	//  `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteWaiterRequest) Reset()                    { *m = DeleteWaiterRequest{} }
func (m *DeleteWaiterRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteWaiterRequest) ProtoMessage()               {}
func (*DeleteWaiterRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *DeleteWaiterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ListConfigsRequest)(nil), "google.cloud.runtimeconfig.v1beta1.ListConfigsRequest")
	proto.RegisterType((*ListConfigsResponse)(nil), "google.cloud.runtimeconfig.v1beta1.ListConfigsResponse")
	proto.RegisterType((*GetConfigRequest)(nil), "google.cloud.runtimeconfig.v1beta1.GetConfigRequest")
	proto.RegisterType((*CreateConfigRequest)(nil), "google.cloud.runtimeconfig.v1beta1.CreateConfigRequest")
	proto.RegisterType((*UpdateConfigRequest)(nil), "google.cloud.runtimeconfig.v1beta1.UpdateConfigRequest")
	proto.RegisterType((*DeleteConfigRequest)(nil), "google.cloud.runtimeconfig.v1beta1.DeleteConfigRequest")
	proto.RegisterType((*ListVariablesRequest)(nil), "google.cloud.runtimeconfig.v1beta1.ListVariablesRequest")
	proto.RegisterType((*ListVariablesResponse)(nil), "google.cloud.runtimeconfig.v1beta1.ListVariablesResponse")
	proto.RegisterType((*WatchVariableRequest)(nil), "google.cloud.runtimeconfig.v1beta1.WatchVariableRequest")
	proto.RegisterType((*GetVariableRequest)(nil), "google.cloud.runtimeconfig.v1beta1.GetVariableRequest")
	proto.RegisterType((*CreateVariableRequest)(nil), "google.cloud.runtimeconfig.v1beta1.CreateVariableRequest")
	proto.RegisterType((*UpdateVariableRequest)(nil), "google.cloud.runtimeconfig.v1beta1.UpdateVariableRequest")
	proto.RegisterType((*DeleteVariableRequest)(nil), "google.cloud.runtimeconfig.v1beta1.DeleteVariableRequest")
	proto.RegisterType((*ListWaitersRequest)(nil), "google.cloud.runtimeconfig.v1beta1.ListWaitersRequest")
	proto.RegisterType((*ListWaitersResponse)(nil), "google.cloud.runtimeconfig.v1beta1.ListWaitersResponse")
	proto.RegisterType((*GetWaiterRequest)(nil), "google.cloud.runtimeconfig.v1beta1.GetWaiterRequest")
	proto.RegisterType((*CreateWaiterRequest)(nil), "google.cloud.runtimeconfig.v1beta1.CreateWaiterRequest")
	proto.RegisterType((*DeleteWaiterRequest)(nil), "google.cloud.runtimeconfig.v1beta1.DeleteWaiterRequest")
}

func init() {
	proto.RegisterFile("google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 1129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x98, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x35, 0x49, 0xeb, 0xc6, 0x2f, 0x3f, 0x40, 0x93, 0x1f, 0xb2, 0xb6, 0xad, 0x88, 0xa6,
	0x28, 0x32, 0x56, 0xb5, 0x5b, 0xbb, 0x55, 0x9a, 0x58, 0x94, 0x43, 0x52, 0x14, 0xc2, 0x0f, 0x51,
	0x2d, 0x21, 0xbd, 0x44, 0xb2, 0x36, 0xce, 0xc4, 0x59, 0xb0, 0x77, 0x97, 0xdd, 0xd9, 0x04, 0x8a,
	0x72, 0x81, 0x1b, 0x08, 0x09, 0x89, 0x43, 0x39, 0x71, 0x40, 0x02, 0x24, 0x84, 0x10, 0x27, 0x2e,
	0x88, 0xfe, 0x01, 0x5c, 0x91, 0xf8, 0x0b, 0xf8, 0x43, 0xd0, 0xce, 0x8f, 0xf5, 0xae, 0x63, 0xc7,
	0xb3, 0x21, 0xbd, 0xc5, 0xb3, 0xef, 0xbd, 0xf9, 0xcc, 0x9b, 0x37, 0xef, 0xfb, 0x14, 0x58, 0xed,
	0xf8, 0x7e, 0xa7, 0x4b, 0xad, 0x76, 0xd7, 0x8f, 0x0f, 0xac, 0x30, 0xf6, 0x98, 0xdb, 0xa3, 0x6d,
	0xdf, 0x3b, 0x74, 0x3b, 0xd6, 0x71, 0x7d, 0x9f, 0x32, 0xa7, 0x9e, 0x5f, 0x35, 0x83, 0xd0, 0x67,
	0x3e, 0x26, 0xc2, 0xcf, 0xe4, 0x7e, 0x66, 0xde, 0x42, 0xfa, 0x19, 0x37, 0x64, 0x6c, 0x27, 0x70,
	0x2d, 0xc7, 0xf3, 0x7c, 0xe6, 0x30, 0xd7, 0xf7, 0x22, 0x11, 0xc1, 0x68, 0xe8, 0xec, 0x4c, 0x23,
	0x3f, 0x0e, 0xdb, 0x54, 0xf9, 0xdc, 0x92, 0x3e, 0x5d, 0xdf, 0xeb, 0x84, 0xb1, 0xe7, 0xb9, 0x5e,
	0xc7, 0xf2, 0x03, 0x1a, 0xe6, 0x02, 0x5f, 0x97, 0x46, 0xfc, 0xd7, 0x7e, 0x7c, 0x68, 0xd1, 0x5e,
	0xc0, 0x3e, 0x91, 0x1f, 0x5f, 0x1a, 0xfc, 0x98, 0xec, 0x1a, 0x31, 0xa7, 0x17, 0x08, 0x03, 0x72,
	0x04, 0xf8, 0x6d, 0x37, 0x62, 0x9b, 0x1c, 0x24, 0xb2, 0xe9, 0x47, 0x31, 0x8d, 0x18, 0x5e, 0x82,
	0x52, 0xe0, 0x84, 0xd4, 0x63, 0x15, 0xb4, 0x8c, 0xaa, 0x65, 0x5b, 0xfe, 0xc2, 0xd7, 0xa1, 0x1c,
	0x38, 0x1d, 0xda, 0x8a, 0xdc, 0x27, 0xb4, 0x32, 0xb1, 0x8c, 0xaa, 0x57, 0xed, 0xa9, 0x64, 0xe1,
	0x3d, 0xf7, 0x09, 0xc5, 0x37, 0x01, 0xf8, 0x47, 0xe6, 0x7f, 0x48, 0xbd, 0xca, 0x24, 0x77, 0xe4,
	0xe6, 0x3b, 0xc9, 0x02, 0xf9, 0x02, 0xc1, 0x7c, 0x6e, 0xab, 0x28, 0xf0, 0xbd, 0x88, 0xe2, 0xb7,
	0xe0, 0x9a, 0x48, 0x43, 0x54, 0x41, 0xcb, 0x93, 0xd5, 0xe9, 0x46, 0xdd, 0x1c, 0x9f, 0x6c, 0xd3,
	0x16, 0xab, 0x22, 0x98, 0xad, 0x22, 0xe0, 0x15, 0x78, 0xc1, 0xa3, 0x1f, 0xb3, 0x56, 0x06, 0x64,
	0x82, 0x83, 0xcc, 0x26, 0xcb, 0x8f, 0x52, 0x98, 0x15, 0x78, 0x71, 0x8b, 0x4a, 0x14, 0x75, 0x68,
	0x0c, 0x57, 0x3c, 0xa7, 0x47, 0xa5, 0x03, 0xff, 0x9b, 0x3c, 0x45, 0x30, 0xbf, 0x19, 0x52, 0x87,
	0xd1, 0xbc, 0xed, 0xa8, 0x04, 0x6d, 0x43, 0x49, 0xa0, 0xf0, 0x28, 0x17, 0x3a, 0x8b, 0x0c, 0x90,
	0xa4, 0x33, 0x14, 0xbb, 0xb5, 0xdc, 0x03, 0x95, 0x4e, 0xb9, 0xb2, 0x7d, 0x40, 0x18, 0xcc, 0xbf,
	0x1f, 0x1c, 0x9c, 0x01, 0x53, 0x87, 0x40, 0xfd, 0x43, 0x5c, 0x22, 0x14, 0x79, 0x05, 0xe6, 0x1f,
	0xd2, 0x2e, 0xd5, 0xd8, 0x95, 0xfc, 0x84, 0x60, 0x21, 0xb9, 0xef, 0x5d, 0x27, 0x74, 0x9d, 0xfd,
	0x2e, 0x1d, 0x5b, 0x5c, 0x4b, 0x50, 0x3a, 0x74, 0xbb, 0x8c, 0x86, 0xf2, 0x06, 0xe4, 0xaf, 0x7c,
	0xd1, 0x4d, 0x9e, 0x5b, 0x74, 0x57, 0x06, 0x8a, 0x0e, 0xdf, 0x82, 0xd9, 0x90, 0xb2, 0x38, 0xf4,
	0x5a, 0xc7, 0x4e, 0x37, 0xa6, 0x51, 0xe5, 0xea, 0x32, 0xaa, 0x4e, 0xd9, 0x33, 0x62, 0x71, 0x97,
	0xaf, 0x91, 0x2f, 0x11, 0x2c, 0x0e, 0x90, 0xca, 0xda, 0x7c, 0x13, 0xca, 0xc7, 0x6a, 0x51, 0x56,
	0xe7, 0x6d, 0x9d, 0xe4, 0xa9, 0x48, 0x76, 0xdf, 0x5d, 0xbb, 0x34, 0x29, 0x2c, 0x3c, 0x76, 0x58,
	0xfb, 0x28, 0x8d, 0x71, 0xce, 0xcd, 0xae, 0x03, 0x78, 0xf4, 0x84, 0x86, 0x2d, 0x76, 0xe4, 0x88,
	0xd3, 0x4f, 0x37, 0x0c, 0x05, 0xa8, 0xde, 0xbc, 0xb9, 0xa3, 0xde, 0xbc, 0x5d, 0xe6, 0xd6, 0x3b,
	0x47, 0x8e, 0x47, 0xaa, 0x80, 0xb7, 0x28, 0xd3, 0xd8, 0x84, 0x7c, 0x8b, 0x60, 0x51, 0xbc, 0x81,
	0x41, 0xeb, 0x51, 0x37, 0xf9, 0x06, 0x4c, 0xa9, 0x73, 0xcb, 0x92, 0x2b, 0x96, 0xb5, 0xd4, 0x7b,
	0xdc, 0x23, 0x88, 0x61, 0x51, 0x3c, 0x02, 0x9d, 0x64, 0x5d, 0x1a, 0x15, 0xd9, 0x86, 0x45, 0xf1,
	0x0a, 0x74, 0xb6, 0xbd, 0x01, 0xe5, 0x90, 0xb6, 0xe3, 0x30, 0x72, 0x8f, 0xc5, 0xbe, 0x53, 0x76,
	0x7f, 0x41, 0xf5, 0xdf, 0xc7, 0x8e, 0xcb, 0x68, 0xf8, 0x5c, 0xfb, 0xef, 0xe7, 0xb2, 0xff, 0xa6,
	0x5b, 0xc9, 0x1a, 0x7f, 0x08, 0xd7, 0x4e, 0xc4, 0x92, 0xac, 0xf0, 0x9a, 0x4e, 0x56, 0x44, 0x14,
	0x5b, 0xb9, 0x16, 0x6c, 0xbc, 0xd2, 0xfb, 0x9c, 0xa2, 0xfb, 0x3a, 0x6d, 0xbc, 0x79, 0xdb, 0x51,
	0x99, 0xd9, 0x80, 0x92, 0x40, 0x91, 0x57, 0x5b, 0xe4, 0x10, 0xd2, 0x73, 0x5c, 0xb1, 0xa5, 0xbd,
	0x6f, 0x2c, 0x7d, 0xe3, 0x9f, 0x05, 0x58, 0xc8, 0x35, 0xd0, 0x77, 0x1c, 0xcf, 0xe9, 0xd0, 0x10,
	0xff, 0x82, 0x60, 0x3a, 0x23, 0x82, 0x78, 0x55, 0x07, 0xf3, 0xac, 0x40, 0x1b, 0xf7, 0x0b, 0xfb,
	0x89, 0xdb, 0x26, 0xb7, 0x3f, 0xfb, 0xfb, 0xdf, 0x6f, 0x26, 0x56, 0xf0, 0xcb, 0xe9, 0xd0, 0xf1,
	0xa9, 0xc8, 0xe0, 0x83, 0x20, 0xf4, 0x3f, 0xa0, 0x6d, 0x16, 0x59, 0xb5, 0x53, 0x4b, 0xc9, 0xe9,
	0xf7, 0x08, 0xca, 0xa9, 0x4e, 0xe2, 0x7b, 0x3a, 0x9b, 0x0e, 0xca, 0xaa, 0x51, 0x5c, 0x6d, 0x86,
	0x41, 0x26, 0x69, 0xcd, 0x20, 0x2a, 0x42, 0xab, 0x76, 0x8a, 0x7f, 0x43, 0x30, 0x93, 0xd5, 0x68,
	0xac, 0x95, 0x9c, 0x21, 0xaa, 0x7e, 0x11, 0xd4, 0x7b, 0x1c, 0xd5, 0x24, 0x5a, 0xf9, 0x6c, 0x2a,
	0x6d, 0x4f, 0x90, 0xb3, 0xea, 0xad, 0x87, 0x3c, 0x44, 0xef, 0xff, 0x07, 0xb2, 0xa1, 0x95, 0xdd,
	0x14, 0xf9, 0x2b, 0x04, 0x33, 0x59, 0xe9, 0xd7, 0x43, 0x1e, 0x32, 0x2c, 0x18, 0x4b, 0x67, 0x04,
	0xea, 0xf5, 0x64, 0x62, 0x55, 0xb7, 0x5e, 0xd3, 0xbb, 0xf5, 0x67, 0x08, 0x66, 0x73, 0xa2, 0x8d,
	0xd7, 0x74, 0xdf, 0xc4, 0xe0, 0x44, 0x62, 0xac, 0x5f, 0xc0, 0x53, 0xbe, 0xa7, 0x35, 0x0e, 0xdd,
	0xc0, 0x77, 0xce, 0xb9, 0xff, 0x0c, 0xb6, 0xd5, 0x9f, 0x07, 0x7e, 0x45, 0x30, 0x9d, 0x51, 0x60,
	0xbd, 0x56, 0x70, 0x56, 0xb2, 0x8d, 0x42, 0x22, 0x46, 0xd6, 0x39, 0xef, 0x5d, 0x5c, 0xd7, 0x48,
	0x72, 0x1f, 0xd6, 0xaa, 0xd5, 0x4e, 0xf1, 0x1f, 0x08, 0x66, 0x73, 0x93, 0x89, 0x5e, 0xc6, 0x87,
	0x0d, 0x33, 0x05, 0xa1, 0x37, 0x38, 0xf4, 0xab, 0xe4, 0x7e, 0x61, 0xe8, 0xe6, 0x49, 0xb2, 0x7b,
	0x13, 0xd5, 0xf0, 0x9f, 0x08, 0xe6, 0xf2, 0x53, 0x0c, 0x5e, 0xd7, 0xef, 0x13, 0x97, 0xc3, 0x5f,
	0xb8, 0x48, 0x9a, 0xfd, 0x49, 0xe8, 0x19, 0x82, 0xb9, 0xfc, 0xac, 0xa3, 0xc7, 0x3f, 0x74, 0x3e,
	0x2a, 0xc8, 0xbf, 0xc9, 0xf9, 0x1f, 0x18, 0xc5, 0x8b, 0x26, 0x73, 0x80, 0xef, 0x10, 0xcc, 0xe5,
	0xa7, 0x26, 0xbd, 0x03, 0x0c, 0x9d, 0xb4, 0x46, 0x36, 0x11, 0x59, 0xdf, 0xb5, 0x0b, 0xd4, 0xf7,
	0xef, 0x52, 0x9b, 0xe5, 0x80, 0xa4, 0xaf, 0xcd, 0xf9, 0xe1, 0x4d, 0x5f, 0x9b, 0x07, 0x26, 0x31,
	0xb2, 0xca, 0xd9, 0xef, 0x60, 0x53, 0xb3, 0x4c, 0xd4, 0xec, 0xf5, 0x83, 0x50, 0x69, 0x11, 0x4e,
	0x5b, 0xa5, 0x73, 0x53, 0x8c, 0x51, 0x60, 0x5e, 0x1a, 0xc6, 0x39, 0x3a, 0xc7, 0x12, 0x32, 0x69,
	0xd9, 0x3f, 0xa6, 0x42, 0x2d, 0x51, 0x0b, 0x08, 0x75, 0x9e, 0xf6, 0xa6, 0x72, 0xcc, 0xfc, 0x67,
	0xc4, 0x7c, 0x57, 0xfd, 0x67, 0x84, 0xbc, 0xc6, 0x01, 0xd7, 0x48, 0xc1, 0x44, 0x36, 0xd5, 0x20,
	0xf8, 0x34, 0xd5, 0xba, 0x22, 0xa0, 0x43, 0x86, 0xc3, 0x91, 0x65, 0x2a, 0x53, 0x58, 0x2b, 0x98,
	0xc2, 0x0d, 0x06, 0x2b, 0x6d, 0xbf, 0xa7, 0x41, 0xf3, 0x08, 0xfd, 0x3c, 0x41, 0xb6, 0x84, 0xd9,
	0x26, 0x37, 0xcb, 0x0d, 0x01, 0xe6, 0x6e, 0x7d, 0x23, 0x31, 0xfb, 0x4b, 0x19, 0xed, 0x71, 0xa3,
	0xbd, 0x9c, 0xd1, 0xde, 0xae, 0x88, 0xb5, 0x5f, 0xe2, 0xf4, 0x77, 0xff, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0x27, 0xf6, 0xb4, 0xc9, 0x3e, 0x13, 0x00, 0x00,
}
