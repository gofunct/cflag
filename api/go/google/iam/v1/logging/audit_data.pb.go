// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/iam/v1/logging/audit_data.proto

package google_iam_v1_logging

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/go/google/api"
import google_iam_v1 "go.pedge.io/pb/go/google/iam/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Audit log information specific to Cloud IAM. This message is serialized
// as an `Any` type in the `ServiceData` message of an
// `AuditLog` message.
type AuditData struct {
	// Policy delta between the original policy and the newly set policy.
	PolicyDelta *google_iam_v1.PolicyDelta `protobuf:"bytes,2,opt,name=policy_delta,json=policyDelta" json:"policy_delta,omitempty"`
}

func (m *AuditData) Reset()                    { *m = AuditData{} }
func (m *AuditData) String() string            { return proto.CompactTextString(m) }
func (*AuditData) ProtoMessage()               {}
func (*AuditData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuditData) GetPolicyDelta() *google_iam_v1.PolicyDelta {
	if m != nil {
		return m.PolicyDelta
	}
	return nil
}

func init() {
	proto.RegisterType((*AuditData)(nil), "google.iam.v1.logging.AuditData")
}

func init() { proto.RegisterFile("google/iam/v1/logging/audit_data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4b, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0xcf, 0x4c, 0xcc, 0xd5, 0x2f, 0x33, 0xd4, 0xcf, 0xc9, 0x4f, 0x4f, 0xcf, 0xcc,
	0x4b, 0xd7, 0x4f, 0x2c, 0x4d, 0xc9, 0x2c, 0x89, 0x4f, 0x49, 0x2c, 0x49, 0xd4, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x85, 0xa8, 0xd3, 0xcb, 0x4c, 0xcc, 0xd5, 0x2b, 0x33, 0xd4, 0x83, 0xaa,
	0x93, 0x92, 0x81, 0x6a, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9,
	0xcc, 0xcf, 0x2b, 0x86, 0x68, 0x92, 0x92, 0x42, 0x35, 0xbc, 0x20, 0x3f, 0x27, 0x33, 0xb9, 0x12,
	0x22, 0xa7, 0xe4, 0xc5, 0xc5, 0xe9, 0x08, 0xb2, 0xc4, 0x25, 0xb1, 0x24, 0x51, 0xc8, 0x96, 0x8b,
	0x07, 0x22, 0x19, 0x9f, 0x92, 0x9a, 0x53, 0x92, 0x28, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24,
	0xa5, 0x87, 0x6a, 0x69, 0x00, 0x58, 0x89, 0x0b, 0x48, 0x45, 0x10, 0x77, 0x01, 0x82, 0xe3, 0xe4,
	0xcd, 0x25, 0x99, 0x9c, 0x9f, 0xab, 0x87, 0xd5, 0x89, 0x4e, 0x7c, 0x70, 0x6b, 0x02, 0x40, 0x16,
	0x07, 0x30, 0xae, 0x62, 0x92, 0x76, 0x87, 0xa8, 0x74, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0xf3, 0x4c,
	0xcc, 0xd5, 0x0b, 0x33, 0xd4, 0xf3, 0x81, 0xa8, 0x4f, 0x62, 0x03, 0xbb, 0xcf, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x2c, 0x2b, 0x50, 0x04, 0x1a, 0x01, 0x00, 0x00,
}
