// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto

package google_devtools_clouderrorreporting_v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/go/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A request for reporting an individual error event.
type ReportErrorEventRequest struct {
	// [Required] The resource name of the Google Cloud Platform project. Written
	// as `projects/` plus the
	// [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840).
	// Example: `projects/my-project-123`.
	ProjectName string `protobuf:"bytes,1,opt,name=project_name,json=projectName" json:"project_name,omitempty"`
	// [Required] The error event to be reported.
	Event *ReportedErrorEvent `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *ReportErrorEventRequest) Reset()                    { *m = ReportErrorEventRequest{} }
func (m *ReportErrorEventRequest) String() string            { return proto.CompactTextString(m) }
func (*ReportErrorEventRequest) ProtoMessage()               {}
func (*ReportErrorEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ReportErrorEventRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

func (m *ReportErrorEventRequest) GetEvent() *ReportedErrorEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

// Response for reporting an individual error event.
// Data may be added to this message in the future.
type ReportErrorEventResponse struct {
}

func (m *ReportErrorEventResponse) Reset()                    { *m = ReportErrorEventResponse{} }
func (m *ReportErrorEventResponse) String() string            { return proto.CompactTextString(m) }
func (*ReportErrorEventResponse) ProtoMessage()               {}
func (*ReportErrorEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// An error event which is reported to the Error Reporting system.
type ReportedErrorEvent struct {
	// [Optional] Time when the event occurred.
	// If not provided, the time when the event was received by the
	// Error Reporting system will be used.
	EventTime *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=event_time,json=eventTime" json:"event_time,omitempty"`
	// [Required] The service context in which this error has occurred.
	ServiceContext *ServiceContext `protobuf:"bytes,2,opt,name=service_context,json=serviceContext" json:"service_context,omitempty"`
	// [Required] A message describing the error. The message can contain an
	// exception stack in one of the supported programming languages and formats.
	// In that case, the message is parsed and detailed exception information
	// is returned when retrieving the error event again.
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// [Optional] A description of the context in which the error occurred.
	Context *ErrorContext `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
}

func (m *ReportedErrorEvent) Reset()                    { *m = ReportedErrorEvent{} }
func (m *ReportedErrorEvent) String() string            { return proto.CompactTextString(m) }
func (*ReportedErrorEvent) ProtoMessage()               {}
func (*ReportedErrorEvent) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ReportedErrorEvent) GetEventTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.EventTime
	}
	return nil
}

func (m *ReportedErrorEvent) GetServiceContext() *ServiceContext {
	if m != nil {
		return m.ServiceContext
	}
	return nil
}

func (m *ReportedErrorEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportedErrorEvent) GetContext() *ErrorContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterType((*ReportErrorEventRequest)(nil), "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventRequest")
	proto.RegisterType((*ReportErrorEventResponse)(nil), "google.devtools.clouderrorreporting.v1beta1.ReportErrorEventResponse")
	proto.RegisterType((*ReportedErrorEvent)(nil), "google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent")
}

func init() {
	proto.RegisterFile("google/devtools/clouderrorreporting/v1beta1/report_errors_service.proto", fileDescriptor3)
}

var fileDescriptor3 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcd, 0x8a, 0x13, 0x41,
	0x10, 0xc7, 0xe9, 0xf8, 0xb1, 0x6c, 0x47, 0x54, 0xda, 0x83, 0xc3, 0x20, 0xb8, 0xc6, 0xcb, 0xa2,
	0x30, 0x6d, 0xe2, 0xc5, 0xac, 0xc8, 0x42, 0xd6, 0xb0, 0x37, 0x59, 0x66, 0x75, 0x4f, 0x81, 0xa1,
	0x33, 0x29, 0xc3, 0x48, 0xa6, 0x6b, 0xec, 0xee, 0x04, 0x41, 0xbc, 0xf8, 0x0a, 0x7b, 0xf2, 0xee,
	0xc9, 0x47, 0xf1, 0xea, 0x0b, 0x78, 0xf0, 0x21, 0x3c, 0x4a, 0x7f, 0x2d, 0x59, 0x93, 0xcb, 0xe8,
	0xb1, 0x7a, 0xaa, 0x7e, 0xff, 0xfa, 0xf8, 0x0f, 0x3d, 0x9e, 0x23, 0xce, 0x17, 0xc0, 0x67, 0xb0,
	0x32, 0x88, 0x0b, 0xcd, 0xcb, 0x05, 0x2e, 0x67, 0xa0, 0x14, 0x2a, 0x05, 0x0d, 0x2a, 0x53, 0xc9,
	0x39, 0x5f, 0xf5, 0xa7, 0x60, 0x44, 0x9f, 0xfb, 0x97, 0xc2, 0x7d, 0xd5, 0x85, 0x06, 0xb5, 0xaa,
	0x4a, 0xc8, 0x1a, 0x85, 0x06, 0xd9, 0x63, 0x0f, 0xca, 0x22, 0x28, 0xdb, 0x02, 0xca, 0x02, 0x28,
	0xbd, 0x17, 0x54, 0x45, 0x53, 0x71, 0x21, 0x25, 0x1a, 0x61, 0x2a, 0x94, 0xda, 0xa3, 0xd2, 0x67,
	0x6d, 0x7a, 0x2a, 0xb1, 0xae, 0x51, 0x86, 0xca, 0xfb, 0xa1, 0xd2, 0x45, 0xd3, 0xe5, 0x5b, 0x6e,
	0xaa, 0x1a, 0xb4, 0x11, 0x75, 0xe3, 0x13, 0x7a, 0xe7, 0x84, 0xde, 0xcd, 0x1d, 0x63, 0x6c, 0x71,
	0xe3, 0x15, 0x48, 0x93, 0xc3, 0xfb, 0x25, 0x68, 0xc3, 0x1e, 0xd0, 0x1b, 0x8d, 0xc2, 0x77, 0x50,
	0x9a, 0x42, 0x8a, 0x1a, 0x12, 0xb2, 0x47, 0xf6, 0x77, 0xf3, 0x6e, 0x78, 0x7b, 0x25, 0x6a, 0x60,
	0x6f, 0xe8, 0x35, 0xb0, 0x25, 0x49, 0x67, 0x8f, 0xec, 0x77, 0x07, 0x87, 0x59, 0x8b, 0xa1, 0x33,
	0xaf, 0x0b, 0xb3, 0x35, 0x65, 0x4f, 0xeb, 0xa5, 0x34, 0xd9, 0x6c, 0x4a, 0x37, 0x28, 0x35, 0xf4,
	0xbe, 0x76, 0x28, 0xdb, 0xac, 0x64, 0x43, 0x4a, 0x5d, 0x6d, 0x61, 0x27, 0x74, 0xad, 0x76, 0x07,
	0x69, 0x6c, 0x27, 0x8e, 0x9f, 0xbd, 0x8e, 0xe3, 0xe7, 0xbb, 0x2e, 0xdb, 0xc6, 0x6c, 0x46, 0x6f,
	0x85, 0xd3, 0x15, 0x25, 0x4a, 0x03, 0x1f, 0xe2, 0x38, 0xcf, 0x5b, 0x8d, 0x73, 0xea, 0x19, 0x47,
	0x1e, 0x91, 0xdf, 0xd4, 0x97, 0x62, 0x96, 0xd0, 0x9d, 0x1a, 0xb4, 0x16, 0x73, 0x48, 0xae, 0xb8,
	0x45, 0xc6, 0x90, 0x9d, 0xd2, 0x9d, 0xa8, 0x7b, 0xd5, 0xe9, 0x0e, 0x5b, 0xe9, 0xba, 0x25, 0x44,
	0xd5, 0x48, 0x1a, 0xfc, 0x26, 0xf4, 0xce, 0xda, 0x0e, 0x75, 0xe8, 0x8e, 0xfd, 0x24, 0xf4, 0xf6,
	0xdf, 0xbb, 0x65, 0x2f, 0xff, 0xe1, 0x6e, 0x1b, 0x7e, 0x49, 0xc7, 0xff, 0x49, 0x09, 0x07, 0x3e,
	0xfc, 0xfc, 0xe3, 0xd7, 0x79, 0x67, 0xd8, 0x7b, 0x72, 0x61, 0xe9, 0x8f, 0xeb, 0x36, 0x7c, 0x11,
	0x02, 0xcd, 0x1f, 0x7d, 0xe2, 0xee, 0x88, 0xfa, 0xc0, 0xd3, 0x0f, 0xbc, 0x7b, 0x46, 0x5f, 0x08,
	0xb5, 0x7f, 0x41, 0x9b, 0x6e, 0x46, 0xc9, 0x96, 0x5d, 0x9d, 0x58, 0xd7, 0x9c, 0x90, 0x6f, 0x9d,
	0x87, 0xc7, 0x9e, 0x74, 0x64, 0x01, 0x7e, 0xdf, 0xf9, 0x05, 0xe1, 0xac, 0x3f, 0xb2, 0x84, 0xef,
	0x31, 0x6b, 0xe2, 0xb2, 0x26, 0x97, 0xb3, 0x26, 0x67, 0x5e, 0x67, 0x7a, 0xdd, 0x59, 0xf1, 0xe9,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x41, 0x88, 0xbe, 0x67, 0x04, 0x00, 0x00,
}
